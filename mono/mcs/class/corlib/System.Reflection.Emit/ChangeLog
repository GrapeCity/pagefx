2007-09-02  Zoltan Varga  <vargaz@gmail.com>

	* TypeBuilder.cs: Add a workaround for #82625 to make nemerle work again.

2007-07-11  Rodrigo Kumpera <rkumpera@novell.com>

	* TypeBuilder.cs (CreateType): method did not check for enum type with defined methods and fixed compatibility issue in case of calling CreateType again after the first one failed, it now returns null as well.

2007-07-10  Zoltan Varga  <vargaz@gmail.com>

	* OpCodeType.cs EventToken.cs FieldToken.cs SignatureToken.cs PackingSize.cs
	StringToken.cs AssemblyBuilderAccess.cs FlowControl.cs MethodToken.cs
	ParameterToken.cs TypeToken.cs PropertyToken.cs OperandType.cs PEFileKinds.cs
	StackBehaviour.cs: 2.0 updates.
	
2007-07-07  Gert Driesen  <drieseng@users.sourceforge.net>

	* MethodBuilder.cs: Code formatting. Spaces to tabs.
	* TypeBuilder.cs: Same.

2007-07-06  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeBuilder.cs: Throw InvalidOperationException when attempting to
	construct non-abstract interface without base type. Modified SetParent
	to match MS: in 2.0 profile, throw InvalidOperationException when 
	parent is null and TypeBuilder is non-abstract interface. When
	parent is null and TypeBuilder is not an interface, then set object
	as parent. In 1.0 profile, throw ArgumentNullException when parent is
	null.

2007-07-06  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeBuilder.cs: Implemented IsCOMObjectImpl.

2007-07-04  Atsushi Enomoto  <atsushi@ximian.com>

	* DynamicMethod.cs : 2.0 API fix.

2007-06-21  Zoltan Varga  <vargaz@gmail.com>

	* DynamicMethod.cs: Applied patch from Robert Jordan (robertj@gmx.net). Add
	a destructor which frees the runtime data for the method.

2007-05-21  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeBuilder.cs: Changed HasElementTypeImpl to return false on 2.0
	profile when type is not baked.

2007-05-21  Jb Evain  <jb@nurv.fr>

	* TypeBuilder.cs
	  MethodBuilder.cs:
		Tag methods and types as HasSecurity when adding a
		SuppressUnmanagedCodeSecurityAttribute on them.
		Makes peverify happy.

2007-05-16  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeBuilder.cs (GetField): Return MonoField instance if the type is
	already created. Fixed other part of bug #81368.

2007-05-16  Zoltan Varga  <vargaz@gmail.com>

	* TypeBuilder.cs (GetFields): Return MonoField objects if the type is already
	created.

	* FieldBuilder.cs (SetValue): Make this not supported again.
	
	* FieldBuilder.cs: Support calling SetValue (). Fixes #81638.

2007-05-06  Zoltan Varga  <vargaz@gmail.com>

	* TypeBuilder.cs (CreateType): Fix build.
	
	* TypeBuilder.cs (.ctor): Convert null parent to typeof (object). Fixes #81530.

	* TypeBuilder.cs (UnderlyingSystemType): Remove commented out code.

2007-04-15  Alp Toker  <alp@atoker.com>

	* ConstructorBuilder.cs: Make use of
	ConstructorInfo.TypeConstructorName/ConstructorName.

2007-04-09  Alp Toker  <alp@atoker.com>

	* ConstructorBuilder.cs: Remove redundant overrides.

2007-04-03  Marek Safar  <marek.safar@gmail.com>

	* OpCodes.cs: Removed obsolete opcodes.

2007-04-03  Alp Toker  <alp@atoker.com>

	* GenericTypeParameterBuilder.cs: SetInterfaceConstraints(Type[]) is
	params.
	* MethodBuilder.cs: MakeGenericMethod(Type[]) is params.

2007-03-19  Marek Safar  <marek.safar@gmail.com>

	* MethodBuilder.cs: MethodImplAttribute cannot be destructive and overwrite
	existing flags.

2007-03-17  Marek Safar  <marek.safar@gmail.com>

	* MethodBuilder.cs: Implemented conversion of PreserveSigAttribute pseudo
	attribute.

2007-03-17  Zoltan Varga  <vargaz@gmail.com>

	* ILGenerator.cs (Emit): Disallow ldtoken on a DynamicMethod as well.
	
	* ILGenerator.cs (Emit): Do not allow ldftn on a DynamicMethod to be
	compatible with MS.NET. Fixes #81157.

2007-03-13  Miguel de Icaza  <miguel@novell.com>

	* OpCode.cs: Add a couple of operators for jsc.sf.net

2007-03-12  Zoltan Varga  <vargaz@gmail.com>

	* DynamicMethod.cs: Add a field used by unmanaged code.

2007-03-06  Rolf Bjarne Kvinge  <RKvinge@novell.com>

	* MonoArrayMethod.cs: Use 'void' as return type in ToString when 
	the return type is null. Fixes #80435.

2007-03-06  Gert Driesen  <drieseng@users.sourceforge.net>

	* EnumBuilder.cs: On 2.0 profile, using current EnumBuilder as
	field type in DefinedLiteral. Fixes bug #81007.

2007-02-25  Marek Safar  <marek.safar@gmail.com>

	* MethodBuilder.cs: Empty string is not allowed for DllImport name.

2007-02-13  Marek Safar  <marek.safar@gmail.com>

	* ModuleBuilder.cs: Add GetRegisteredType to expose name_cache for internal
	usage.

	* TypeBuilder.cs: Optimized generation of unmanaged data helpers.
	An unmanaged data class helper can be re-used when its size matches to
	size of requested class.

2007-01-25  Radek Doulik  <rodo@novell.com>

	* ModuleBuilder.cs: return created type from GetType in case the
	type builder type was already created. Added test-555.cs as
	regression test.

Tue Jan 23 17:45:07 CET 2007 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs, AssemblyBuilder.cs: mark the GC-tracked field
	with UIntPtr.

2007-01-16  Rolf Bjarne Kvinge  <RKvinge@novell.com>

	* EnumBuilder.cs: value__ must have RTSpecialName flag set.
	Fixes #80396

Fri Dec 22 19:42:56 CET 2006 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs: associate a resource writer with its
	actual resource (bug #80339).

2006-10-06  Miguel de Icaza  <miguel@novell.com>

	* AssemblyBuilder.cs: Am doing a try/catch for pulling the LCID
	from the AssemblyCulture that is provided, as Microsoft allows
	arbitrary locales (even non-existing ones) to be specified.

	The .locale information is actually pulled from the AssemblyName,
	not from this lcid.  But this LCID is used to encode the
	resource.  In my exploration of this, we are setting this field,
	even if CSC never sets the field itself (its always zero).

	Maybe we should completely remove this.

2006-09-12  Mart Roosma  <roosma@gmail.com>

	* DynamicMethod.cs: Allow empty name and null return type. 
	Fixes bug #79367.

2006-09-05  Miguel de Icaza  <miguel@novell.com>

	* TypeBuilder.cs (SetParent): Null parent is allowed for
	interfaces. 

2006-09-02  Zoltan Varga  <vargaz@gmail.com>

	* DynamicMethod.cs: Fix a warning.

	* TypeBuilder.cs: Allow static methods on interfaces. Fixes #79249.

2006-08-18  Zoltan Varga  <vargaz@gmail.com>

	* *.cs: Use String.Empty instead of "" in a lot of places.

2006-07-14  Zoltan Varga  <vargaz@gmail.com>

	* ConstructorBuilder.cs (GetILGenerator): Avoid creating a new ILGenerator each time
	this is called. Fixes #78859.

2006-07-11  Zoltan Varga  <vargaz@gmail.com>

	* MethodBuilder.cs (SetCustomAttribute): Fix handling of SpecialNameAttribute.

2006-07-09  Gert Driesen  <drieseng@users.sourceforge.net>

	* DynamicMethod.cs: Fix check for empty method body, avoids SIGSEV.

2006-07-08  Zoltan Varga  <vargaz@gmail.com>

	* DynamicMethod.cs: Create all other DynamicMethod's referenced by
	this method as well. Check for an empty method body.

	* ILGenerator.cs (Emit): Handle DynamicMethod's which might not have a
	declaring type.

2006-05-15  Zoltan Varga  <vargaz@gmail.com>

	* AssemblyBuilder.cs (MonoResource): Add a 'stream' field.

	* ModuleBuilder.cs (DefineManifestResource): Add new net 2.0 method.

2006-04-26  Miguel de Icaza  <miguel@novell.com>

	* MethodBuilder.cs: better error messages when we close the
	method. 

2006-03-28  Marek Safar  <marek.safar@seznam.cz>

	* ILGenerator.cs: Delayed the exception stack creation. It saves ~1.5 MB
	for corlib compilation.

2006-03-27  Marek Safar  <marek.safar@seznam.cz>

	* ILGenerator.cs: Tune up label defaults, switched to double resizing.

2006-03-15  Zoltan Varga  <vargaz@gmail.com>

	* AssemblyBuilder.cs (AddTypeForwarder): New internal method for
	adding type forwarders to an assembly.

2006-02-27  Gert Driesen  <drieseng@users.sourceforge.net>

	* ConstructorBuilder.cs: In AddDeclarativeSecurity, throw an
	ArgumentOutOfRangeException instead of an ArgumentException if action 
	is a Request* action. Fixes bug #77640.
	* MethodBuilder.cs: Same.
	* TypeBuilder.cs: Same.

Mon Feb 27 17:12:40 CET 2006 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs: unlink the file before saving
	otherwise we might overwrite a file mmapped by the runtime.

2006-02-17  Zoltan Varga  <vargaz@gmail.com>

	* DynamicMethod.cs: Implement DefineParameter ().

	* ParameterBuilder.cs: Add support for DynamicMethod parents.

2006-02-15  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.DefineMethod): Also enable the
	2-argument version in the `BOOTSTRAP_NET_2_0' profile.
	(TypeBuilder.DefineGenericMethod): Removed.

2006-02-14  Martin Baulig  <martin@ximian.com>

	* ConstructorBuilder.cs
	(ConstructorBuilder.IsGenericMethod): Override this and return
	false; the MS runtime doesn't throw an exception here.
	(ConstructorBuilder.IsGenericMethodDefinition): Likewise.

	* MethodBuilder.cs
	(MethodBuilder.IsGenericMethod): Implement this.
	(MethodBuilder.IsGenericMethodDefinition): Likewise.

2006-02-03  Zoltan Varga  <vargaz@gmail.com>

	* TypeBuilder.cs (CreateType): Add a check for Sealed parents.

2006-02-01  Zoltan Varga  <vargaz@gmail.com>

	* OpCodes.cs: Readonly is a net 2.0 only field.

Tue Jan 31 13:37:02 CET 2006 Paolo Molaro <lupus@ximian.com>

	* OpCodes.cs: Added Readonly field.

2006-01-29  Raja R Harinath  <harinath@gmail.com>

	* GenericTypeParameterBuilder.cs (DeclaringType): Return the
	declaring type of a generic method.

2005-12-15  Raja R Harinath  <rharinath@novell.com>

	* TypeBuilder.cs (IsGenericType): Implement override.

2005-12-07  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs: Add support for custom attributes.
	(GenericTypeParameterBuilder.cattrs): New field.
	(GenericTypeParameterBuilder.SetCustomAttribute): Implement this.

Mon Dec 5 15:13:26 CET 2005 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: fixed emitting doubles on ARM.

2005-12-02  Alp Toker  <alp@atoker.com>

	* GenericTypeParameterBuilder.cs:
	* TypeBuilder.cs: DeclaringMethod should return MethodBase, not MethodInfo

2005-11-19  Zoltan Varga  <vargaz@gmail.com>

	* AssemblyBuilder.cs: Add support for setting FileVersion unmanaged 
	resource. Fixes #64427.

2005-11-18  Zoltan Varga  <vargaz@gmail.com>

	* ParameterBuilder.cs (SetCustomAttribute): Handle DefaultParameterValueAttribute as well.

	* CustomAttributeBuilder.cs: Add support for decoding more types of
	constructor parameters.

2005-11-11  Zoltan Varga  <vargaz@gmail.com>

	* TypeBuilder.cs (SetCustomAttribute): Handle ComImportAttribute as well.

2005-11-11  Marek Safar  <marek.safar@seznam.cz>

	* EnumBuilder.cs, GenericTypeParameterBuilder.cs: Reflect Type changes.

2005-11-06  Zoltan Varga  <vargaz@freemail.hu>

	* Label.cs: Add == and != operators.

2005-10-30  Zoltan Varga  <vargaz@freemail.hu>

	* FieldBuilder.cs: Add implementation of new UMarshal property.

2005-10-27  Zoltan Varga  <vargaz@gmail.com>

	* FieldBuilder.cs MethodBuilder.cs ConstructorBuilder.cs: Add support for
	returing custom attributes in created types. MS.NET supports this by
	returning non-builder objects from GetMethod/GetField etc., but we return
	builder objects in this case. Fixes #76521.

2005-10-24  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.IsGenericTypeDefinition): Override this.

2005-10-03  Atsushi Enomoto  <atsushi@ximian.com>

	* CustomAttributeBuilder.cs : internal attributes should be allowed.
	  Fixed bug #75723.

2005-09-26  Marek Safar  <marek.safar@seznam.cz>

	* PropertyBuilder.cs: Throw NotSupportedException for unsupported
	methods.

2005-09-14  Martin Baulig  <martin@ximian.com>

	* LocalBuilder.cs
	(LocalBuilder.Mono_GetLocalIndex): New static internal method;
	same as the .NET 2.0 property `LocalIndex'.

Mon Sep 5 18:08:09 CEST 2005 Paolo Molaro <lupus@ximian.com>

	* EventBuilder.cs, FieldBuilder.cs, MethodBuilder.cs, TypeBuilder.cs,
	PropertyBuilder.cs: take care of the SpecialName attribute (bug #75768).

2005-09-01  Raja R Harinath  <rharinath@novell.com>

	* CustomAttributeBuilder.cs (get_umarshal): Don't cause a nullref
	exception when passed a custom marshaller type that belongs to the
	assembly being built.  When user specifies MarshalType rather than
	MarshalTypeRef, don't attempt to resolve the type.

2005-08-31  Raja R Harinath  <rharinath@novell.com>

	* CustomAttributeBuilder.cs (get_umarshal): Fix typo.  The name of
	the field is "SizeParamIndex", not "SizeSizeParamIndex".

	* ParameterBuilder.cs (SetCustomAttribute) [MarshalAsAttribute]:
	Set ParameterAttributes.HasFieldMarshal flag.

2005-08-19  Zoltan Varga  <vargaz@freemail.hu>

	* DynamicMethod.cs (CreateDelegate): Don't cache the delegate since it
	needs to be different for each target.
	
	* DynamicMethod.cs (CreateDynMethod): Call ilgen.label_fixup ().

	* DynamicMethod.cs (AddRef): Reserve every second ref slot for use by the
	runtime.

2005-08-05  Gert Driesen  <drieseng@users.sourceforge.net>

	* AssemblyBuilder.cs: Implement _AssemblyBuilder, CA fixes to 
	correspond with MS.NET
	* ConstructorBuilder.cs: Implement _ConstructorBuilder, CA fixes to 
	correspond with MS.NET
	* CustomAttributeBuilder.cs: Implement _CustomAttributeBuilder, CA 
	fixes to correspond with MS.NET
	* EnumBuilder.cs: Implement _EnumBuilder, CA fixes to correspond with 
	MS.NET
	* EventBuilder.cs: Implement _EventBuilder, CA fixes to correspond 
	with MS.NET
	* FieldBuilder.cs: Implement _FieldBuilder, CA fixes to correspond 
	with MS.NET
	* LocalBuilder.cs: Implement _LocalBuilder, CA fixes to correspond 
	with MS.NET
	* MethodBuilder.cs: Implement _MethodBuilder, CA fixes to correspond 
	with MS.NET
	* MethodRental.cs: CA fixes to correspond with MS.NET, implemented
	_MethodRental.
	* ModuleBuilder.cs: Implement _ModuleBuilder, CA fixes to correspond 
	with MS.NET
	* ILGenerator.cs: Implement _ILGenerator, CA fixes to correspond 
	with MS.NET
	* ParameterBuilder.cs Implement _ParameterBuilder, CA fixes to 
	correspond with MS.NET
	* PropertyBuilder.cs: Implement _PropertyBuilder, CA fixes to 
	correspond with MS.NET
	* SignatureHelper.cs: Implement _SignatureHelper, CA fixes to 
	correspond with MS.NET
	* TypeBuilder.cs: Implement _TypeBuilder, CA fixes to correspond 
	with MS.NET

2005-07-21  Jb Evain  <jbevain@gmail.com>

	* ILGenerator.cs: Implement filter blocks support.
	Fixes bug #75010.

2005-07-21  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs (BeginFaultBlock): Call InternalEndClause () here
	too. Reported by Jeroen Frijters.

2005-07-11  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.CreateType): Call
	create_generic_class() here as well; fixes #75454.

2005-06-27  Marek Safar  <marek.safar@seznam.cz>

	* TypeBuilder.cs (check_name): Wrong exception argument order.

2005-06-14  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyBuilder.cs: Override UnprotectedGetName to set the public 
	key (if available).

2005-06-12  Gert Driesen <drieseng@users.sourceforge.net>

	* MethodBuilder.cs: In CreateMethodBody, throw 
	ArgumentOutOfRangeException instead of ArgumentException when count 
	is not within range of array. Do not allow zero length method body 
	to be emitted when using 2.0 profile. Fixes bug #75236.

2005-06-12  Gert Driesen <drieseng@users.sourceforge.net>

	* FieldBuilder.cs: FieldBuilder.FieldHandle should throw
	NotSupportedException to match MS.NET (both 1.x and 2.x). 
	Fixes regression introduced in r45750.
	* MethodBuilder.cs: MethodBuilder.MethodHandle should throw
	NotSupportedException to match MS.NET (both 1.x and 2.x).
	Fixes regression introduced in r45750.

2005-06-09  Kamil Skalski <nazgul@nemerle.org>
	* ConstructorBuilder.cs FieldBuilders.cs MethodBuilder.cs: Return
	RuntimeHandles when requested
	
	* TypeBuilder.cs: Add static Get{Method,Constructor,Field} methods
	from .NET 2.0 beta 2 API for obtaining instanciated *Info objects
	from non-instanciated counterparts 

2005-06-08  Zoltan Varga  <vargaz@freemail.hu>

	* ConstructorBuilder.cs FieldBuilder.cs MethodBuilder.cs PropertyBuilder.cs:
	Add 2.0 Module property.

	* *.cs: Updates for net 2.0 beta 2.

2005-06-07  Zoltan Varga  <vargaz@freemail.hu>

	* *Token.cs: Add net 2.0 Equals methods.

	* *.cs: Updates for net 2.0 beta 2.

	* *.cs: Updates for net 2.0 beta 2.

2005-06-06  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Update after PortableExecutableKinds name change.

2005-06-03  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs CustomAttributeBuilder.cs: Rework DllImportAttribute
	decoding to improve compatibility with MS.NET.
	
	* MethodBuilder.cs (SetCustomAttribute): Set PinvokeImpl attribute if
	a DllImportAttribute is present.

2005-06-02  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs (SetCustomAttribute): Handle the case when the
	calling convention inside the DllImportAttribute is empty.

2005-06-01  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs (SetCustomAttribute): Handle DllImportAttribute
	as well.

	* CustomAttributeBuilder.cs: Add a decode_cattr helper method.

2005-05-27  Vladimir Vukicevic  <vladimir@pobox.com>

	* MethodBuilder.cs: Add extra_flags field to encode P/Invoke
	bits that can't be specified via MethodBuilder directly; fixes
	#75060.

2005-05-25  Zoltan Varga  <vargaz@freemail.hu>

	* GenericTypeParameterBuilder.cs: Return this in UnderlyingSystemType.

2005-05-25  Lluis Sanchez Gual  <lluis@novell.com>

	* ModuleBuilder.cs: Implemented DefineDocument(). Generate debug
	info when saving the module.
	* ILGenerator.cs: Keep marked sequence points in a list.
	Added a GenerateDebugInfo method, which dumps the info collected
	during code generation.
	* TypeBuilder.cs:
	* ConstructorBuilder.cs:
	* MethodBuilder.cs: Added method for generating debug info.
	* LocalBuilder.cs: Added StartOffset and EndOffset properties.
	* CustomAttributeBuilder.cs: Use IsInstanceOfType instead of
	IsAssignableFrom when possible.

2005-05-20  Miguel de Icaza  <miguel@novell.com>

	* TypeBuilder.cs (UnderlyingSystemType): should always return this
	according to Zoltan.  Old code left there, but should probably be removed.

2005-05-13  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs (fixup): Take into account CreateMethodBody as
	well.

	* ConstructorBuilder.cs MethodBuilder.cs: Check that elements of
	parameterTypes are not null. Fixes #74928.

2005-05-12  Zoltan Varga  <vargaz@freemail.hu>

	* ConstructorBuilder.cs MethodBuilder.cs (fixup): Fix this.
	
	* ConstructorBuilder.cs MethodBuilder.cs (fixup): Throw an exception if a
	method body is empty. Fixes #74906.

2005-04-13  Marek Safar  <marek.safar@seznam.cz>

	* TypeBuilder.cs (SetCustomAttribute): StructLayoutAttribute.CharSet
	has to overwrite current settings.

2005-04-05  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyBuilder.cs: Don't call GetCurrentDirectory if building an 
	assembly that will never be serialized to disk (because CAS may not
	allow disk access but still allow generating a in-memory assembly).

2005-03-24  Miguel de Icaza  <miguel@novell.com>

	* DynamicMethod.cs (CreateDelegate): Add second overload based on
	the first one that allows for a `target' argument.

2005-03-24  Sebastien Pouliot  <sebastien@ximian.com>

	* MethodRental.cs: Added Demand for UnmanagedCode on SwapMethodBody 
	method.

2005-03-16  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs: Add internal BestFitMapping and 
	ThrowOnUnmappableChar properties used by mcs.

2005-03-09  Marek Safar  <marek.safar@seznam.cz>

	* ILGenerator.cs (DeclareLocal): Throw an exception for null argument.

2005-03-01  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs UnmanagedMarshal.cs: Allow sizeConst and
	sizeParamIndex to be -1, which means they are not given.
	
	* CustomAttributeBuilder.cs (get_umarshal): Only call the internal
	LPArray creation method if sizeConst of sizeParamIndex is given.

	* UnmanagedMarshal.cs: Add has_size field.

2005-02-28  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs (get_umarshal): Marshal sizeConst and
	sizeParamIndex fields as well.

	* UnmanagedMarshal.cs: Add param_num field and a new internal creation
	method which sets it.

2005-02-11  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs (IsAssignableTo): New helper method. Fixes #70838.
	
	* TypeBuilder.cs: Fix warning.

2005-01-21 Rafael Teixeira <rafaelteixeirabr@hotmail.com>
	
	* MethodBuilder.cs, TypeBuilder: missing 'params' in some method signature
	patch by Kamil Skalski <nazgul@nemerle.org>

2005-01-18  Geoff Norton  <gnorton@customerdna.com>

	* ModuleBuilder.cs: Interfaces should have null BaseType.
	Fixes #71301.

2005-01-18  Miguel de Icaza  <miguel@ximian.com>

	* TypeBuilder.cs: Add check for creation.  Fix from Geoff.

2004-12-16  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs: Fix a warning.

Wed Dec 15 11:34:13 CET 2004 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs, EnumBuilder.cs: actually add the enumbuilder
	to the type list of the module (bug#70488).

2004-12-09  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs
	(GenericTypeParameterBuilder.IsValueType): Fixed the FIXME.

2004-12-08  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Move corlib_internal field here from Assembly.
	
	* AssemblyBuilder.cs: Add corlib_internal to the ctor parameters.

2004-12-06  Ben Maurer  <bmaurer@ximian.com>

	* TypeBuilder.cs (CreateType): Creating a type twice does not
	throw in msft.

2004-11-22  Zoltan Varga  <vargaz@freemail.hu>

	* ModuleBuilder.cs: Check that all types inside the module are created.
	Fixes #69780.

2004-11-13  Ben Maurer  <bmaurer@ximian.com>

	* ModuleBuilder.cs (Save): Use new WriteToFile icall.

2004-11-04  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Make some members work if the type is created since
	MS does this.

2004-10-30  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs: Check that arguments are not 
	multi-dimensional arrays.

2004-10-12  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.setup_generic_class): Renamed to
	create_generic_class() and added a new setup_generic_class().
	(TypeBuilder.DefineGenericParameters): Call setup_generic_class()
	before creating the type parameters.

2004-10-11  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.generic_container): New private field.

	* MethodBuilder.cs (MethodBuilder.generic_container): New private field.

	* GenericTypeParameterBuilder.cs
	(GenericTypeParameterBuilder.GetGenericTypeParameterConstraints):
	Return `Type.EmptyTypes' instead of an array of `typeof (object)'.	

2004-10-08  Zoltan Varga  <vargaz@freemail.hu>

	* ModuleBuilder.cs: Create global type after creation.

2004-10-06  Zoltan Varga  <vargaz@freemail.hu>

	* ModuleBuilder.cs (GetTypes): Fix length of returned array. Fixes
	#65931.

2004-10-04  Zoltan Varga  <vargaz@freemail.hu>

	* ModuleBuilder.cs (DefineType): Check for duplicate type names. Fixes
	#65988.

2004-10-03  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilderAccess.cs: Remove [Flags].

	* PackingSize.cs: Add new 2.0 members. Remove [Flags].

	* AssemblyBuilder.cs: Add net 2.0 Save method.

	* LocalBuilder.cs: Make this inherit from LocalVariableInfo under
	net 2.0. Reorganize fields so the layout visible to the runtime is the
	same under 1.0 and 2.0. Add 2.0 properties.

2004-10-02  Gert Driesen  <drieseng@users.sourceforge.net>

	* TypeBuilder.cs: throw NotSupportedException when defining default
	ctor if parent type does not have default ctor

2004-09-30  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Make 'created' field visible to the runtime.

2004-09-28  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs
	(GenericTypeParameterBuilder.ContainsGenericParameters): Return
	true here; System.Type.ContainsGenericParameters returns true when
	called on a type parameter, so let's do the same here.

2004-09-27  Zoltan Varga  <vargaz@freemail.hu>

	* ConstructorBuilder.cs: Add 2.0 GetILGenerator(size) method.

2004-09-26  Zoltan Varga  <vargaz@freemail.hu>

	* UnmanagedMarshal.cs: Add ToMarshalAsAttribute method.

2004-09-25  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Add IsCreated method.

2004-09-24  Zoltan Varga  <vargaz@freemail.hu>

	* FieldBuilder.cs: Add dummy GetFieldOffset method.

2004-09-24  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs
	(GenericTypeParameterBuilder.GetGenericParameterConstraints): Override.

2004-09-23  Zoltan Varga  <vargaz@freemail.hu>

	* DynamicMethod.cs: Add MetadataToken property and tweak Module property.

2004-09-23  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs
	(GenericTypeParameterBuilder.SetGenericParameterAttributes): New
	public method, replaces the old Mono_* hacks.

2004-09-20  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyBuilder.cs: Fixed assembly-level permissions. I don't know 
	why I splitted them all into individual entries when only a single set
	is accepted for each security action :(.

2004-09-17  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs: Applied patch from Marcus Urban
	(mathpup@mylinuxisp.com). Add support for defining custom
	marshallers by calling SetCustomAttribute.	

2004-09-16  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyBuilder.cs: Keep a copy of the 3 permission set as an array
	of RefEmitPermissionSet. This will allow to reuse existing 
	functionalities already present in the runtime.

2004-09-12  Marek Safar  <marek.safar@seznam.cz>

	* TypeBuilder.cs: Do not create default constructor for
	static classes.

2004-09-09  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Set the table_idx of the global type to 1.

	* ModuleBuilder.cs: Save the main module of the assembly even if it is 
	transient.

2004-09-02 Ben Maurer  <bmaurer@users.sourceforge.net>

	* LocalBuilder.cs: another s.ioe

2004-09-02 Ben Maurer  <bmaurer@users.sourceforge.net>

	* ModuleBuilder.cs: dont throw an S.IOE for debugging stuff.
	makes sre apps work

2004-09-02  Martin Baulig  <martin@ximian.com>

	* MethodBuilder.cs (MethodBuilder.GetParameters): Throw a
	NotSupportedException() until the type has been fully created.

2004-09-01  Martin Baulig  <martin@ximian.com>

	* IMonoSymbolWriter.cs: Removed.

	* ModuleBuilder.cs, LocalBuilder.cs, ILGenerator.cs: Removed the
	old debugging code.

2004-08-13  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyBuilder.cs: (Partly) Fix delay-signing issue (#56621) when 
	MCS is used on the MS runtime (other part of the fix is for MCS).

2004-08-11  Marek Safar  <marek.safar@seznam.cz>

	* AssemblyBuilder.cs: Added AddPermissionRequests method
	used be mcs for SecurityPermissionAttribute handling.

2004-08-08  Zoltan Varga  <vargaz@freemail.hu>

	* EnumBuilder.cs: Call setup_enum_type () in the constructor. Fixes
	#62237.

2004-08-07  Jackson Harper  <jackson@ximian.com>

	* AssemblyBuilder.cs: "neutral" culture is invariant culture
	(String.Empty).

2004-08-07  Atsushi Enomoto  <atsushi@ximian.com>

	* OpCodes.cs : csc complains CS1034 Line cannot exceed 2046 characters.

2004-08-05  Duncan Mak  <duncan@ximian.com>

	* OpCodes.cs (TakesSingleByteArgument): Add this back.

2004-08-05  Duncan Mak  <duncan@ximian.com>	

	This patch is based on an idea of Ben's to reduce the code size
	in MCS. 

	* OpCodes.cs: Instead pushing the data onto the stack when each
	OpCode is initialized, pack the data into 2 ints and store only
	that.  Furthermore, the names of each OpCode are stored in a
	separate string array in the new OpCodeNames class.

	* OpCodeNames.cs: The names of each OpCode are moved here to delay
	the initialization of the strings, as they are not used frequently.

	* OpCode.cs: Rewrote this to take in everything as 2 ints.

2004-07-29  Martin Baulig  <martin@ximian.com>

	* ILGenerator.cs (ILGenerator.Mono_GetCurrentOffset): New static
	internal method.

	* ModuleBuilder.cs (ModuleBuilder.Mono_GetGuid): New static
	internal method.

2004-07-24  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.UnspecifiedTypeSize): Set this to 0
	and initialize it to 0 everywhere.

2004-07-22  Martin Baulig  <martin@ximian.com>

	* ILGenerator.cs (ILGenerator.BeginFaultBlock): Implemented.

2004-07-07  Miguel de Icaza  <miguel@ximian.com>

	* LocalBuilder.cs: Remove MakePinned, we are now going to use
	ILGenerator.DeclaraLocal that takes the `bool pinned' argument. 

	* ILGenerator.cs (DeclareLocal): Add `pinned' version of the
	method on the 2.0 profile.

2004-07-02  Zoltan Varga  <vargaz@freemail.hu>

	* EnumBuilder.cs (CreateType): Call a new icall to set the internal
	type field. Fixes #59833.

Thu Jun 24 15:33:04 CEST 2004 Paolo Molaro <lupus@ximian.com>

	* ParameterBuilder.cs: implement SetConstant ().

Wed Jun 23 15:40:48 CEST 2004 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: handle properly the case when SetParent() 
	is called (requires an updated runtime, too bug#60474).

Wed Jun 23 14:20:47 CEST 2004 Paolo Molaro <lupus@ximian.com>

	* EnumBuilder.cs, TypeBuilder.cs: patch from Gert Driesen
	to implement EnumBuilder (slightly tweaked).

2004-06-15  Gert Driesen <drieseng@users.sourceforge.net>

	* MethodRental.cs: fixed value of JitOnDemand

2004-06-09  Gert Driesen <drieseng@users.sourceforge.net>

	* FieldBuilder.cs: fixed implementation to match MS.NET,
	meaning throw InvalidOperationException for methods that
	should not be allowed to execute when type has been
	created, and throw NotSupportedException for methods and
	properties that should not be called on FieldBuilder

2004-06-09  Gert Driesen <drieseng@users.sourceforge.net>

        * MethodBuilder.cs: move check to see if type has already 
	been created up, to match MS.NET behaviour. Fix GetHashCode 
	(removed TODO)

2004-06-09  Gert Driesen <drieseng@users.sourceforge.net>

        * MethodRental.cs: Added check for method size

2004-06-08  Martin Baulig  <martin@ximian.com>

	* ILGenerator.cs (TokenGenerator.GetToken): Added overloaded
	version which takes a MethodInfo and a Type[].
	(IlGenerator.EmitCall): When emitting a call to a varargs method,
	use the new GetToken() to pass the optional argument types to the
	runtime.

	* ModuleBuilder.cs (ModuleBuilder.getMethodToken): New interncall.

2004-05-29  Gert Driesen (drieseng@users.sourceforge.net)

	* AssemblyBuilder.cs: removed extra method, fixes public API
	compatibility with MS.NET
	* TypeBuilder.cs: removed extra method, fixes public API
	compatibility with MS.NET

2004-05-28  Jackson Harper  <jackson@ximian.com>

	* CustomAttributeBuilder.cs: GetBlob now takes a ref to the
	assembly so it can encode type names properly.
	
2004-05-25  Sebastien Pouliot  <sebastien@ximian.com>

	* MethodBuilder.cs: Now use FastNewGuidArray to create new random 
	Guids without using CryptoConfig. Speed up for MCS.

2004-05-14  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs: Add Equals and GetHashCode.

	* TypeBuilder.cs: Add IsSubclassOf.

2004-05-13  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Make extra methods internal. mcs was changed
	to handle this a long time ago.

	* TypeBuilder.cs: Add IsAssignableFrom and IsInstanceOfType.
	
	* TypeBuilder.cs MethodBuilder.cs ConstructorBuilder.cs: Implement
	ToString ().

	* TypeBuilder.cs (ToString): Make this consistent with MS.NET.

2004-05-11  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* OpCodes.cs: Refactored to avoid the static constructor

2004-05-10  Gert Driesen (drieseng@users.sourceforge.net)
	* AssemblyBuilder.cs: fixed warning
	* MethodRental.cs: added private default ctror to match MS.NET

2004-05-03 Lluis Sanches Gual  <lluis@ximian.com>

	* ModuleBuilder.cs: Use name const to load the debugger assembly.

2004-05-01  Todd Berman  <tberman@sevenl.net>

	* ModuleBuilder.cs: Load the proper assembly for a gac-only install.

2004-04-29 Ben Maurer  <bmaurer@users.sourceforge.net>

	* ILGenerator.cs, ModuleBuilder.cs: readonlyificate.

2004-04-28  Zoltan Varga  <vargaz@freemail.hu>

	* MethodRental.cs: New file.

2004-04-28  Raja R Harinath  <rharinath@novell.com>

	* TypeBuilder.cs (SetCustomAttribute): Handle the presence of the
	full type name in the data stream.  This is emitted for value
	types by the Mono runtime.

2004-04-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ConstructorBuilder.cs, DynamicMethod.cs, EnumBuilder.cs,
	  GenericTypeParameterBuilder.cs, MethodBuilder.cs, ModuleBuilder.cs,
	  OpCodes.cs, TypeBuilder.cs :
	  The fix should be easier ;)

2004-04-23  Atsushi Enomoto  <atsushi@ximian.com>

	* ConstructorBuilder.cs, DynamicMethod.cs, EnumBuilder.cs,
	  GenericTypeParameterBuilder.cs, MethodBuilder.cs, ModuleBuilder.cs,
	  OpCodes.cs, TypeBuilder.cs :
	  NET_2_0 related build fix.

2004-04-07  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs
	(Mono_SetReferenceTypeConstraint): New public method.
	(Mono_SetValueTypeConstraint): New public method.

2004-04-07  Bernie Solomon  <bernard@ugsolutions.com>

	* MethodBuilder.cs, TypeBuilder.cs: always have 
	slot for generic_params for consistent offsets.

2004-04-07  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs
	(Mono_SetConstructorConstraint): New public method.	

2004-04-07  Martin Baulig  <martin@ximian.com>

	* GenericTypeParameterBuilder.cs: New file.

	* TypeBuilder.cs (TypeBuilder.DefineGenericParameters): New public
	method.  This is the new public API.
	(TypeBuilder.DefineGenericParameter): Removed.
	(TypeBuilder.SetGenericParameterConstraints): Removed.

	* MethodBuilder.cs (MethodBuilder.DefineGenericParameters): New public
	method.  This is the new public API.
	(MethodBuilder.DefineGenericParameter): Removed.
	(MethodBuilder.SetGenericParameterConstraints): Removed.

2004-04-01  Martin Baulig  <martin@ximian.com>

	* OpCodes.cs (OpCodes.Constrained): New opcode.

2004-04-01 Ben Maurer  <bmaurer@users.sourceforge.net>

	* LocalBuilder.cs: Fix pinned support.

2004-03-30  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.SetGenericParameterConstraints):
	Added `bool has_ctor_constraint' argument.

	* MethodBuilder.cs (MethodBuilder.SetGenericParameterConstraints):
	Added `bool has_ctor_constraint' argument.

2004-03-29 Ben Maurer  <bmaurer@users.sourceforge.net>

	* LocalBuilder.cs: pinned support.

2004-03-29  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.ContainsGenericParameters): Implemented.

2004-03-25  Sebastien Pouliot  <sebastien@ximian.com>

	* AssemblyBuilder.cs: Changed strongname support to match MS 
	implementation (i.e. attributes are used by the compiler - not by
	AssemblyBuilder).

2004-03-24  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs (GetMethod): Implement.

	* CustomAttributeBuilder.cs: Reenable argument checking with MS.NET
	compatibility tweaks.

2004-03-23  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.GetEvents_internal): New internal
	method; this is basically GetEvents(), but see the FIXME in that method.

2004-03-23  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs: Disable argument checking since it causes
	regressions.

2004-03-22  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs (Initialize): Add more argument checking. 
	Fixes #55793.

2004-03-09  Jackson Harper  <jackson@ximian.com>

	* CustomAttributeBuilder.cs: Add some argument checking. Handle
	default arguments properly.

2004-03-09  Sebastien Pouliot  <spouliot@videotron.ca>

	* AssemblyBuilder.cs: The strong name key file existance will now be
	checked in the current compilation directory AND in the assembly
	output directory. Fix bugzilla entry #55320.

2004-02-23  Martin Baulig  <martin@ximian.com>

	* MethodBuilder.cs (MethodBuilder.SetGenericMethodSignature):
	Added MethodAttributes and CallingConventions arguments.

2004-02-02  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Implement DefineUninitializedData and 
	AddDeclarativeSecurity.

2004-01-27  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (SetCustomAttribute): Move the reading of the
	keyfile to the Save () method.

2004-01-26  Sebastien Pouliot  <spouliot@videotron.ca>

	* AssemblyBuilder.cs: Save will now strongname the assembly is (a) a
	StrongName is present and (b) the signature isn't delayed.

2004-01-24 David Sheldon <dave-mono@earth.li>

	* AssemblyBuilder.cs: Added override for GetFiles() that throws
	  NotSupportedException. 

2004-01-15  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (Save): Handle entry points with an int return
	type as well.
	
	* AssemblyBuilder.cs (Save): If the entry point is in a module, create
	a new entry point which calls the real one, since the entry point must
	be in the module which contains the manifest.

	* ModuleBuilder.cs (Save): Create the global type automatically if not
	already done.

2004-01-13  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (DefineVersionInfoResource): Set more 
	version info properties.

2004-01-08  Zoltan Varga  <vargaz@freemail.hu>

	* CustomAttributeBuilder.cs (string_arg): New helper method.

	* AssemblyBuilder.cs (DefineVersionInfoResource): Implement.

	* AssemblyBuilder.cs (SetCustomAttribute): Use the new helper method.

	* AssemblyBuilder.cs (DefineUnmanagedResource): Implement.

	* AssemblyBuilder.cs (DefineIconResource): New internal method to
	support mcs.

	* TypeBuilder.cs (IsDefined): Implement this, since some corlib classes
	make calls to IsDefined.

2004-01-06  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Fix warning.

2004-01-05  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (DefineVersionInfoResource): Implement.

2003-12-29 Ben Maurer  <bmaurer@users.sourceforge.net>

	* MethodBuilder.cs, ConstructorBuilder.cs: Override GetParameterCount.
	* ILGenerator.cs: Use GetParameterCount.

2003-12-20  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (AddModule): New internal method to support 
	/addmodule in mcs.

2003-12-19  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: New internal property to support /target:module in
	mcs.

2003-12-18  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs: Applied patch from Ben Maurer 
	(bmaurer@users.sourceforge.net). Allocate arrays holding label data
	lazily and reduce their size.

2003-12-17  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (MonoResource): New 'offset' field used by the
	runtime.

	* ModuleBuilder: Implement DefineResource.

2003-12-15  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (RefEmitPermissionSet): New helper structure.
	
	* MethodBuilder.cs (AddDeclarativeSecurity): Implement.

	* ConstructorBuilder.cs (AddDeclarativeSecurity): Ditto.

2003-12-10  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs: Add stubs for missing methods.

	* TypeBuilder.cs (GetEvents): Add new override.

	* ModuleBuilder.cs: Implement some missing methods, add stubs for others.

	* AssemblyBuilder.cs (GetFiles): Get rid of unneccessary override.

	* AssemblyBuilder.cs (ImageRuntimeVersion): Add override to keep
	signature compatibility with MS.NET.

	* TypeBuilder.cs (MemberType): Get rid of unneccessary override.

2003-12-08  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.MonoGenericParam): Removed; use the
	new `MonoGenericParam' class instead (in S.R/MonoGenericInst.cs).

2003-12-08  Zoltan Varga  <vargaz@freemail.hu>

	* ModuleBuilder.cs: Double the size of the types array during insertion
	do avoid excessive memory allocation and copying. Track the number of
	types in a separate variable.

	* TypeBuilder.cs: Same for the 'fields' and 'methods' arrays.

2003-12-03  Zoltan Varga  <vargaz@freemail.hu>

	* ModuleBuilder.cs (DefinePInvokeMethod): Implement.

	* ModuleBuilder.cs (DefineGlobalMethod): Implement the Net 1.2 variants.

2003-11-28  Dick Porter  <dick@ximian.com>

	* ModuleBuilder.cs: Do string compares with the Invariant culture.

2003-11-28  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (SetCustomAttribute): Implement automatic 
	generation of build and revision numbers. Fixes #46492.

2003-11-25  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Implement GetField.

2003-11-24  Zoltan Varga  <vargaz@freemail.hu>

	* DynamicMethod.cs: New class.

	* ILGenerator.cs MethodBuilder.cs ConstructorBuilder.cs: Retrieve 
	tokens from a token generator object instead of from the ModuleBuilder,
	to support the implementation of DynamicMethod. Also get rid of the 
	unused 'mbuilder' field.

	* ModuleBuilder.cs: Create a token generator object which can be
	passed to ILGenerator.

	* LocalBuilder.cs ILGenerator.cs: Get rid of 'module' field, obtain 
	needed objects from the ilgen object instead.

2003-11-21  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs FieldBuilder.cs MethodBuilder.cs ConstructorBuilder.cs:  Add support for custom modifiers from NET 1.2.

	* ILGenerator.cs: Remove unused abuilder member.

2003-11-19  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* OpCodes.cs: Remove Boxval for v1.1+

2003-11-19  Andreas Nahr <ClassDevelopment@A-SoftTech.com>

	* OpCodes.cs: Small rearrange to fix csc compiler warning about obsolete member used

2003-11-12  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilderAccess.cs PackingSize: Add [Flags].

	* AssemblyBuilder.cs (DefineDynamicModule): Make internal method
	private.

	* AssemblyBuilder.cs (Save): Write out the main module at the end.
	
2003-11-06  Zoltan Varga  <vargaz@freemail.hu>
	
	* ConstructorBuilder.cs (.ctor): Automatically add RTSpecialName flag
	as MS does.

2003-11-06  Martin Baulig  <martin@ximian.com>

	* ModuleBuilder.cs (ModuleBuilder.Save): Call `build_metadata'
	before writing the symbol file.

2003-11-06  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (.ctor): Initialize the 'dir' field to something
	sensible.
	
	* AssemblyBuilder.cs (Save): Set 'created' flag.

	* AssemblyBuilder.cs (get_next_table_index): Moved to ModuleBuilder,
	since table indexes are per-module.

2003-11-03  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs (DefineDefaultConstructor): Pass an array instead of 
	null to DefineConstructor, to avoid NullReferenceExceptions in the 
	binder code.

	* AssemblyBuilder.cs ModuleBuilder.cs ILGenerator.cs: Move getUSIndex 
	and getToken methods, and the associated icalls to ModuleBuilder, 
	since tokens are per-module.

	* AssemblyBuilder.cs ModuleBuilder.cs: Partially revert the previous
	patch, since having the 'is_main' field is useful in the unmanaged 
	code.

	* AssemblyBuilder.cs ModuleBuilder.cs: Move the metadata creation and
	file creation logic to ModuleBuilder:Save (), since this needs to be
	done for every module. Also move the corresponding icalls to 
	ModuleBuilder.

2003-11-03  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs ModuleBuilder.cs: First steps toward a fix for
	#48700 (proper module support in Ref.Emit). Remove is_main field from
	ModuleBuilder and add a mainModule field to AssemblyBuilder instead.
	This is neccesary, since the main module is determined during the 
	Save () call: the module with the same file name as the assembly is
	the main module. Also create a default main module, if one is not
	existing.

2003-11-03  Martin Baulig  <martin@ximian.com>

	* OpCodes.cs: Added Ldelem_Any, Stelem_Any and Unbox_Any from .NET 1.2.

2003-10-18  Sebastien Pouliot  <spouliot@videotron.ca>

	* AssemblyBuilder.cs (SetCustomAttribute): Changed PK extraction to
	use Mono.Security.StrongName (#49785).

2003-10-18  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (SetCustomAttribute): Extract the public key from
	the keyfile.

2003-10-17  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs (SetCustomAttribute): Ignore empty keyfile name.
	
	* AssemblyBuilder.cs: Moved loading of the public key file into
	managed code from reflection.c.	

	* AssemblyBuilder.cs: Set cultureInfo and version from the AssemblyName
	passed to the constructor.

2003-10-13  Martin Baulig  <martin@ximian.com>

	* MethodBuilder.cs (MethodBuilder): Added
	`TypeBuilder.MonoGenericParam[] generic_params' field.
	(DefineGenericParameter, SetGenericMethodSignature): New public methods.

	* TypeBuilder.cs (DefineGenericMethod): New public method.

2003-10-13  Zoltan Varga  <vargaz@freemail.hu>

	* OpCode.cs: Fix Value property. Fixes #49328.

2003-10-03  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs (CreateType): Fire TypeResolve events for unfinished 
	nested value types. Fixes #47022.

2003-09-29  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Really fix #48695.

Sat Sep 27 16:17:08 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: instance fields are loaded from this.

2003-09-26  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs (DefineDefaultConstructor): Make this work on types
	without a parent. Fixes #48695.

2003-09-17  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.CreateType): Don't append the type
	parameters to the type name; ie. use `Stack' instead of `Stack<T>'.

2003-09-06  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.IsUnboundGenericParameter): Implemented.

2003-09-04  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.MonoGenericParam): Make this nested
	class internal, not protected.

2003-08-29  Martin Baulig  <martin@ximian.com>

	* TypeBuilder.cs (TypeBuilder.DefineGenericParameter): New public
	method.  We can now create generic types.
	(TypeBuilder.GetGenericTypeDefinition): Override this; call the
	`setup_internal_class' interncall before calling our base impl.

Sat Aug  2 13:04:55 BST 2003 Malte Hildingson <malte@amy.udd.htu.se>

	* ILGenerator.cs: Emission of doubles now utilise the Double.AssertEndianity
	icall to assert double word endianity on ARM.

2003-07-25  Duncan Mak  <duncan@ximian.com>

	* OpCodes.cs (Boxval): Marked with ObsoleteAttribute.

2003-07-24  Miguel de Icaza  <miguel@ximian.com>

	* TypeBuilder.cs: Added generics stubs.

	* EnumBuilder.cs: Added generics  stubs, changed bracing style for
	routines.

2003-07-23  Duncan Mak  <duncan@ximian.com>

	* SignatureHelper.cs: This class does not have the
	SerializableAttribute.

2003-07-11  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Added argument checking to all methods according
	to the MSDN docs. Also marked DefineUnmanagedResource and its friends
	as not implemented.
	* ModuleBuilder.cs: Added new property FileName used by AssemblyBuilder.
	* ModuleBuilder.cs AssemblyBuilder.cs: Implemented IsTransient ().

2003-06-15  Zoltan Varga  <vargaz@freemail.hu>

	* EventBuilder.cs: Add argument checking to methods.

Thu Jun 5 20:18:55 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: implemented DefineResource ().

Thu Jun 5 12:36:34 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* OpCode.cs: implemented Equals/GetHashCode.

Tue Jun 3 11:14:51 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs, OpCode.cs: optimize opcode space usage.

Tue Jun 3 11:13:22 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* UnmanagedMarshal.cs: add ability to define custom attributes (the MS
	runtime doesn't support this).

2003-05-30  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs: Implement DefineTypeInitializer.

2003-05-21  Zoltan Varga  <vargaz@freemail.hu>

	* ModuleBuilder.cs: 
	- Implement DefineInitializedData in terms of DefineUninitializedData
	- Name the types of global fields $ArrayType$<len> to cut back on the
	number of types created
	- Add argument checking

2003-05-19  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Implement GetDynamicModule. "Implement" various
	methods not supported under MS.NET.

2003-05-18  Martin Baulig  <martin@ximian.com>

	* AssemblyBuilder.cs (corlib_void_type): New internal field.
	(SetCorlibTypeBuilders): Added overloaded version which takes 4
	arguments to set the `corlib_void_type'.

	* TypeBuilder.cs: Use `pmodule.assemblyb.corlib_void_type' instead
	of `typeof (void)' to make this work when compiling corlib.

Thu May 15 19:16:54 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* MethodBuilder.cs: off by one in CreateMethodBody().
	* TypeBuilder.cs: if the return type for a method is null, use void.

2003-04-28  Miguel de Icaza  <miguel@ximian.com>

	* MethodBuilder.cs: Mono allows the parameter position to be zero
	to indicate the "returns:" attribute.

2003-04-20  Miguel de Icaza  <miguel@ximian.com>

	* ILGenerator.cs (EmitCall): Implement.

	Flag a few unimplemented methods with MonoTODO, make coding style
	for method definitions Mono consistent.

2003-04-17  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs: Implement EmitWriteLine methods.

	* TypeBuilder.cs (CreateType): Avoid creating a default constructor
	for the global type.

2003-04-15  Miguel de Icaza  <miguel@ximian.com>

	* TypeBuilder.cs (DefineDefaultConstructor): Make it generate code
	by default for a default constructor.  This is what the MS runtime
	does.  The PythonNet code expected this.

	(TypeBuilder.GetConstructorImpl): Implement this.

	(TypeBuilder.CreateType): If there are no constructors defined, we
	create one.

Tue Apr 15 13:50:41 CEST 2003 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs, TypeBuilder.cs: set nesting_type before
	calling setup_internal_class ().

2003-03-27  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Added 'access' member, which is needed by the
	runtime.

2003-03-26  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs: Implemented ThrowException.

2003-03-10  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs: Propagate maxstack info along branches.

2003-03-06  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs (Emit): Do not pop the arguments off the stack for
	ldftn etc. Fixes bug #39196.

2003-02-28  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs (Emit): Add fixup for already created methods and
	fields. Do not add fixup for types since their table index do not 
	change any more.

2003-02-26  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs (DefineInitializedData): Removed unnecessary assignments.

	* ModuleBuilder.cs (DefineInitializedData): Do not call 
	TypeBuilder::DefineInitializedData since that would mean defining a
	nested type of the global type, which is wrong. Instead define a
	new public type as MS does.

	* ModuleBuilder.cs (DefineUninitializedData): Ditto.

Thu Feb 13 18:40:52 CET 2003 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs: add the basic initialization call.

2003-02-13  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: Added basic error checking to some methods
	according to the MSDN docs.

2003-02-10  Zoltan Varga  <vargaz@freemail.hu>

	* ConstructorBuilder.cs: 
	- Added basic error checking to all methods according to the MSDN docs.
	- modified a lot of methods to throw NotSupportedException, to comply
	  with MS.NET.

2003-02-09  Zoltan Varga  <vargaz@freemail.hu>

	* TypeBuilder.cs:
	- Added basic error checking to all methods according to the MSDN docs.
	- fixed AssemblyQualifiedName.
	- implemented 'Size'.
	- modified a lot of methods to throw NotSupportedException, to comply
	  with MS.NET.
	- changes tested by running a full bootstrap.

2003-02-09  Martin Baulig  <martin@ximian.com>

	* AssemblyBuilder.cs (AssemblyBuilder.methods): Removed.  This was
	a hack for the symbol writer which is no longer needed.

2003-02-09  Martin Baulig  <martin@ximian.com>

	* IMonoSymbolWriter.cs (DefineNamespace, OpenMethod): New methods.

2003-02-09  Martin Baulig  <martin@ximian.com>

	* IMonoSymbolWriter.cs (MarkSequencePoint): New method which takes
	just the required arguments as scalars, not arrays.

	* ILGenerator.cs (ILGenerator.MarkSequencePoint): Use that new
	interface method; unnecessarily creating such a large number of
	arrays is both slow and too memory consuming.	

2003-02-08  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs: Added error checking to methods so they conform to
	MSDN docs. Implemented 'GetModule' and 'CallingConvention' members. 
	Some other tweaks to improve compatibility with MS .NET.

	* TypeBuilder.cs: Added 'is_created' property which will be used for
	checking 'type is already created' errors.

2003-02-07  Martin Baulig  <martin@ximian.com>

	* ModuleBuilder.cs (.ctor): Added `bool IsMainModule' argument.
	(Save): New internal method; creates the module's symbol file if
	we're compiling with debugging information.

	* AssemblyBuilder.cs (EmbedResource): Added internal overloaded
	version of this method which takes a `byte[] blob' instead of a file.
	(DefineDynamicMethod): If this is the first module, tell the
	ModuleBuilder that this is the main module.
	(Save): Call a new interncall `build_metadata' to create the final
	metadata and save all the symbol files before creating the actual
	output.

	* IMonoSymbolWriter.cs: New public class; it is in the namespace
	Mono.CSharp.Debugger.  The Mono symbol writer implements this interface.

2003-02-04  Zoltan Varga  <vargaz@freemail.hu>

	* AssemblyBuilder.cs: added GetToken (SignatureHelper).

	* ILGenerator.cs: implemented EmitCalli() methods

	* SignatureHelper.cs: implemented GetMethoSigHelper() methods.

2003-01-30  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* MethodBuilder.cs: GetBaseDefinition () returns this.

Mon Jan 27 17:07:38 CET 2003 Paolo Molaro <lupus@ximian.com>

	* CustomAttributeBuilder.cs, FieldBuilder.cs: applied
	(reformatted) patch from "Jerome Laban" <jlaban@wanadoo.fr>
	to fix ByValStr and ByValArray encodings.

2003-01-27  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* AssemblyBuilder.cs: fixed compilation with csc.

2003-01-26  Miguel de Icaza  <miguel@ximian.com>

	* AssemblyBuilder.cs (Save): Set the executable bit at the end.
	This uses a non-official enumeration value to call SetFileAttributes.

2003-01-17  Zoltan Varga  <vargaz@freemail.hu>

	* MethodBuilder.cs ConstructorBuilder.cs: modify GetParameters() so it
	returns information even when the app did not use DefineParameter() to
	define the parameters.

	* ConstructorBuilder.cs (ctor): allways define SpecialName attribute
	for constructors as done by MS.

Mon Jan 13 11:37:14 CET 2003 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs, ModuleBuilder.cs: better type name cache.

2003-01-10  Zoltan Varga  <vargaz@freemail.hu>

	* ILGenerator.cs: Implemented EmitWriteLine(string).

	* TypeBuilder.cs (DefineInitializedData): Call DefineNestedType() 
	instead of DefineType() so the auxiliary types do not pollute the 
	global namespace. This is consistent with the behaviour of MS .NET.

Fri Jan 10 16:03:30 CET 2003 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs, MethodBuilder.cs, TypeBuilder.cs,
	ConstructorBuilder.cs: some tweaks to reduce memory usage.

Thu Jan 2 18:46:09 CET 2003 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs, TypeBuilder.cs: support global fields and methods.

Thu Dec 19 00:06:57 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: remove duplicated user string entries.

2002-12-11  Zoltan Varga  <vargaz@freemail.hu>

	* FieldBuilder.cs: added 'handle' field which is needed by some new
	code in reflection.c.

2002-12-04  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeBuilder.cs: implemented GetInterfaceMap () when the Type has been
	created.

Fri Nov 8 14:53:03 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: account for the exception object being passed to the
	catch handler to calc max_stack.

2002-09-21  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (ModuleBuilder.symbol_writer): Make this
	field internal, not private.
	(ModuleBuilder.SymWriter_DefineLocalVariable): Removed.

	* LocalBuilder.cs (LocalBuilder.SetLocalSymInfo): Use the
	ISymbolWriter's DefineLocalVariable() method instead of the
	IMonoSymbolWriter hack.

Mon Sep 16 19:02:58 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.c: special case some custom attributes.

2002-09-12  Dick Porter  <dick@ximian.com>

	* TypeBuilder.cs: Say _which_ Type has already been created

2002-09-11  Miguel de Icaza  <miguel@ximian.com>

	* ModuleBuilder.cs (GetTypes): Implement.

Tue Sep 10 12:12:51 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* ConstructorBuilder.cs: added a field to hold the handle.

Mon Sep 9 17:31:12 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: prepare for the real CreateType implementation.

Tue Aug 27 16:57:18 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: remove duplicate code and fix
	named field reading in custom attr.

2002-08-24  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* TypeBuilder.cs: UnspecifiedTypeSize is 0.

Wed Aug 14 17:38:41 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: ReflectedType and CreateType fixes.

Thu Aug 8 10:25:51 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: added API to embed managed resources.

2002-08-03  Martin Baulig  <martin@gnome.org>

	* TypeBuilder.cs (TypeBuilder.DeclaringType): Implemented.

Thu Jul 25 13:57:46 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: support linking external resources.

2002-07-19  Martin Baulig  <martin@gnome.org>

	* ILGenerator.cs (Emit (OpCode, LocalBuilder)): Throw an exception
	when trying to emit a local that was defined in a different ILGenerator.

	* LocalBuilder.cs (LocalBuilder): Added `ILGenetator' argument to
	the constructor.

Tue Jul 16 19:32:08 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: stack size check fix.

Sat Jul 13 17:30:51 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: add also the enum_type for compiling corlib.
	* TypeBuilder.cs: complete IsValueType.

Sat Jul 13 15:08:12 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: better IsValueType.

2002-07-13  Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* CustomAttributeBuilder.cs: removed compile warning.

Fri Jul 12 11:34:58 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: fixup typebuilder tokens as well.

Tue Jul 9 19:03:03 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: special case SerializarionAttribute.
	Tweaks to get correct code in corlib.

2002-07-06  Miguel de Icaza  <miguel@ximian.com>

	* ILGenerator.cs (ILGenerator.Emit): For doubles and floats, swap
	the bytes on big endian systems. 

2002-07-03  Martin Baulig  <martin@gnome.org>

	* AssemblyBuilder.cs (corlib_object_type, corlib_value_type): Moved
	these fields up after the last entry in MonoReflectionAssemblyBuilder
	in reflection.h.

	* TypeBuilder.cs (IsValueTypeImpl): Use the AssemblyBuilder's
	`corlib_value_type' instead of `typeof (System.ValueType)'.
	(DefineNestedType): Use the AssemblyBuilder's `corlib_object_type'
	instead of `typeof (object)'.

2002-07-02  Martin Baulig  <martin@gnome.org>

	* AssemblyBuilder.cs (corlib_object_type, corlib_value_type): New
	internal fields.  When compiling corlib, they point to the newly
	created System.Object and System.ValueType types.
	(SetCorlibTypeBuilders): New public function.  This will be
	dynamically called from MCS when compiling corlib.

	* TypeBuilder.cs (DefineInitializedData): Use the AssemblyBuilder's
	`corlib_value_type' as parent type instead of `typeof (System.ValueType)'
	to make it work when compiling corlib.

	* ModuleBuilder.cs (assemblyb): Made this field internal, not private.

Tue Jul 2 18:34:49 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: implemented AssemblyQualifiedName.
	* MethodBuilder.cs, ConstructorBuilder.cs: special case custom attr.

Mon Jul 1 16:17:29 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: implemented AddInterfaceImplementation().

2002-06-28  Martin Baulig  <martin@gnome.org>

	* MethodBuilder.cs (GetParameters): Return all parameters, not all
	but the last one.

2002-06-27  Martin Baulig  <martin@gnome.org>

	* ConstructorBuilder.cs (GetParameters): Implemented.

Mon Jun 17 14:55:43 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs, TypeBuilder.cs: fixes for nested types handling.

Fri Jun 14 16:21:54 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* CustomAttributeBuilder.cs: added custom attribute related internal
	helper methods.
	* FieldBuilder.cs, ParameterBuilder.cs: handle MarshalAs attribute.
	* UnmanagedMarshal.cs: implemented.

Mon Jun 10 18:58:18 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* PropertyBuilder.cs: implemented ReflectedType and DeclaringType
	properties.

2002-06-07  Martin Baulig  <martin@gnome.org>

	* TypeBuilder.cs (TypeBuilder): Added `PackingSize packing_size' and
	`int type_size' fields to the constructor.
	(DefineNestedType): Pass packing_size and type_size to the constructor.

	* ModuleBuilder.cs (DefineType): Pass the packing_size and type_size
	fields to the TypeBuilder's constructor.

2002-06-07  Martin Baulig  <martin@gnome.org>

	* TypeBuilder.cs (DefineNestedType): There is no overload for this
	method which takes 5 args in the specs, removed it.

Fri Jun 7 17:04:06 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: updates for PE/COFF rewrite.

2002-05-30  Martin Baulig  <martin@gnome.org>

	* AssemblyBuilder.cs (methods): Made this internal and don't
	initialize it.  It will be initialized by the ModuleBuilder's
	GetSymbolWriter() method.
	(get_next_table_index): Only store the method in the `methods'
	array if it's not null.

	* ModuleBuilder.cs (GetSymbolWriter): Initialize the AssemblyBuilder's
	`methods' field if necessary and pass it as third argument to the
	symbol writer's constructor.

2002-05-25  Martin Baulig  <martin@gnome.org>

	* TypeBuilder.cs (TypeToken): Implemented.

2002-05-24  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (symwriter_define_local): New private variable.
	(GetSymbolWriter): Look for a custom version of "DefineLocalVariable"
	and store it in `symwriter_define_local'.
	(SymWriter_DefineLocalVariable): New internal method to call the
	symbol writer's custom DefineLocalVariable() method.  It is safe to
	call this method if there's no symbol writer.

	* LocalBuilder.cs (SetLocalSymInfo): Use the MethodBuilder'snew
	SymWriter_DefineLocalVariable().

	* MethodBuilder.cs (GetParameters): Implemented.

2002-05-22  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (GetSymbolWriter): Pass the this pointer to the
	symbol writer's constructor.

2002-05-22  Martin Baulig  <martin@gnome.org>

	* AssemblyBuilder.cs (methods): New field.
	(get_next_table_index): Record all methods and constructors
	(table 0x06) in the `methods' array.  This is read by the
	Mono.CSharp.Debugger.MonoSymbolWriter::get_method interncall to
	get the MethodBuilder / ConstructorBuilder back from the token.

	* *Builder.cs (get_next_table_index): Added `object obj' argument.
	(<constructors>): pass the this pointer to get_next_table_index ().

2002-05-20  Martin Baulig  <martin@gnome.org>

	* TypeBuilder.cs (DefineField): Call the new `create_internal_class'
	interncall after adding the first field.  This is used when creating
	enum types to set `klass->enum_basetype'.

Thu May 16 16:09:51 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: complete special acse support for CharSet, Size and
	Pack named args in StructLayout attribute.

Tue May 14 17:13:48 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* MethodBuilder.cs: revert change in accessibility of
	GetILGenerator(int).

Tue May 14 13:31:17 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* FieldBuilder.cs, ParameterBuilder.cs: more special-casing of
	attributes.

Fri May 10 20:57:27 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* CustomAttributeBuilder.cs: expose internal data for use in
	reflection.
	* FieldBuilder.cs, TypeBuilder.cs: special case FieldOffset and
	StructLayout attributes.

Fri May 10 16:30:57 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* MethodBuilder.cs, ConstructorBuilder.cs: implemented InitLocals
	property.

2002-04-26  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (DefineDocument): Implemented.

Tue Apr 16 13:02:28 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: pad output file to file alignment.
	* FieldBuilder.cs: ReflectedType.
	* ModuleBuilder.cs: added guid generation and array method creation.
	* MonoArrayMethod.cs: array method support code.
	
Wed Apr 10 12:57:31 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: use a stack to keep track of exception blocks.

Mon Apr  8 06:19:01  2002 Piers Haken <piersh@friskit.com>

	* ILGenerator.cs: added LabelField.label_base to allow for
	arbitrary offsets (for switch statement)

Fri Apr 5 15:41:19 CEST 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: simpler protocol wih the runtime to
	get the assembly data.

Tue Mar 26 20:10:24 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: use FileMode.Create.
	* ILGenerator.cs: optimize localbuilder related opcodes.
	Track parameters to adjust maxstack.
	* LocalBuilder.cS: use unsigned for position.

2002-03-23  Miguel de Icaza  <miguel@ximian.com>

	* LocalBuilder.cs: Drop the symbol_writer as LocalBuilder fields.
	Do this lazily in SetLocalSymInfo.
	
2002-03-24  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (GetSymbolWriter): The MonoSymbolWriter's constructor
	now takes a `string assembly_filename' argument, pass it our fully
	qualified assembly name.

2002-03-24  Nick Drochak  <ndrochak@gol.com>

	* ILGenerator.cs: Use #if-#endif instead of if(false){} to disable
	code.  This way there is no compiler warning.

	* TypeBuilder.cs: Removed the returns that came after the throws.
	This removes a few more compiler warnings. Also marked with MonoTODO
	all places where we throw NotImplemented exceptions.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* SignatureHelper.cs (GetFieldSignatureHelper, GetLocalSignatureHelper):
	Implemented.

	* LocalBuilder.cs (LocalBuilder): This internal constructor now takes
	a ModuleBuilder argument instead of a ISymbolWriter one.
	(SetLocalSymInfo): Create and pass type signature to DefineLocalVariable.

2002-03-23  Martin Baulig  <martin@gnome.org>

	* ILGenerator.cs (BeginScope, EndScope): Implemented.

2002-03-20  Martin Baulig  <martin@gnome.org>

	* ModuleBuilder.cs (GetSymbolWriter): New internal function. Dynamically
	loads the default symbol writer, catch all possible exceptions and return
	null on failure.
	(ModuleBuilder): Added `bool emitSymbolInfo' argument to this internal
	constructor; if set, call GetSymbolWriter ().
	(GetSymWriter): Implemented.

	* LocalBuilder.cs (LocalBuilder): Added ISymbolWriter argument to this
	internal method.
	(SetLocalSymInfo): Implemented, call ISymbolWriter.DefineLocalVariable ()
	if the symbol writer is not null.

	* ILGenerator.cs (ILGenerator): Call ModuleBuilder.GetSymWriter () to get
	and store the symbol writer.
	(DeclareLocal): Pass the symbol writer to LocalBuilder's constructor.
	(MarkSequencePoint): Implemented, call ISymbolWriter.DefineSequencePoints ()
	if the symbol writer is not null.

	* AssemblyBuilder.cs (DefineDynamicModule): Pass the `bool emitSymbolInfo'
	to ModuleBuilder's constructor.

Sat Mar 16 19:11:47 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ModuleBuilder.cs: handle modified types correctly.

Thu Mar 7 17:10:42 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: allow saving bigger assemblies.
	* ILGenerator.cs: add fixup table for fields and methods, since
	at the end of the compile they may end up with a different table
	index.
	* ModuleBuilder.cs: add cache for type names to speed up the type
	lookups from the compiler.
	* TypeBuilder.cs: GetInterfaces () returns only interfaces in the
	current type, not in parents (the docs are wrong).

Tue Mar 5 18:09:34 CET 2002 Paolo Molaro <lupus@ximian.com>

	* EventBuilder.cs: implemented.
	* TypeBuilder.cs: implemented DefineEvent() method and UnderlyingSystemType
	property.

Mon Mar 4 20:34:52 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: make enough room in the byte array for string
	tokens.
	* TypeBuilder.cs: fixed GetInterfaces().

Mon Mar 4 11:30:40 CET 2002 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: implemented GetConstructors(), GetFields(),
	GetMethods(), GetProperties().

Thu Feb 28 19:15:10 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: call into the runtime to init some basic
	assembly stuff. Reserve slot 1 of typedef table for .<Module>.
	* ModuleBuilder.cs: call into the runtime if we need to create a
	modief type, such as arrays, byref etc.
	* TypeBuilder.cs: call into the runtime to create the MonoClass
	representation for the type. Throw exceptions with not implemented
	stuff.

Wed Feb 27 18:48:47 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: fix nested exception blocks.

Wed Feb 20 22:30:49 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: upped compiled assembly size limit.
	Implemented SetCustomAttribute () methods.
	* CustomAttributeBuilder.cs: implemented the needed constructor
	stuff.
	* Cosntructorbuilder.cs, EnumBuilder.cs, FieldBuilder.cs,
	MethodBuilder.cs, ModuleBuilder.cs, ParameterBuilder.cs,
	PropertyBuilder.cs, TypeBuilder.cs: Implemented SetCustomAttribute () methods.

Wed Feb 20 14:54:01 CET 2002 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: add SetCustomAttribute () to keep the compiler
	going.

Fri Feb 15 18:15:04 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: finally block support and fixes.

Thu Feb 14 18:55:52 CET 2002 Paolo Molaro <lupus@ximian.com>

	* FieldBuilder.cs: Add SetRVAData().
	* ILGenerator.cs: speed up code array growth.
	* TypeBuilder.cs: fix IsValueTypeImpl(). Add class_size member.
	Implement DefineInitializedData().

Tue Jan 22 23:01:11 CET 2002 Paolo Molaro <lupus@ximian.com>

	* EnumBuilder.cs, TypeBuilder.cs: updates for changes in Type.cs.
	* ModuleBuilder.cs: fix lookup of nested types.

Tue Jan 15 22:46:21 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: implement some of the exception support methods.

Mon Jan 14 17:07:32 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ModulerBuilder.cs: search also for subtypes in GetTypes().
	* TypeBuilder.cs: bugfix in FullName. Implemented DefineNestedType().

Fri Jan 11 19:00:29 CET 2002 Paolo Molaro <lupus@ximian.com>

	* MethodBuilder.cs, ConstructorBuilder.cs: save parameter info.

Thu Jan 10 21:07:54 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: handle type tokens (used for box opcode).

Wed Jan 9 19:37:55 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: emit float and doubles.
	* ModuleBuilder.cs: off-by-one error fix and GetType()
	implementations.
	* TypeBuilder.cs: AttributesImpl added.
	* UnmanagedMarshal.cs: stubbed out class.

Sat Jan 5 15:59:05 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: fix emission of two-bytes opcodes.
	Missing slot for locals array. Throw exceptions on unimplemented
	methods.
	* OpCode.cs: add a comment: the Value property is useless.
	* OpCodes.cs: fix name of tail opcode (Tail -> Tailcall).

2002-01-05  Ravi Pratap  <ravi@ximian.com>

	* ConstructorBuilder.cs : Use the MonoTODO attribute.

	* ILGenerator.cs, Label.cs, MethodBuilder.cs, ModuleBuilder.cs,
	ParameterBuilder.cs, TypeBuilder.cs : Ditto.
	
Thu Jan 3 23:26:15 CET 2002 Paolo Molaro <lupus@ximian.com>

	* ILGenerator.cs: typo fix.

Mon Dec 24 17:21:30 CET 2001 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs: added DefineMethodOverride().
	* MethodBuilder.cs: add override_method member and setter.

Mon Nov 19 13:58:01 CET 2001 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: add method to register a string in the "#US"
	stream.
	* EnumBuilder.cs, SignatureHelper.cs: added stubs.
	* ILGenerator.cs: more stuff implemented.
	* LocalBuilder.cs: keep track of local var index.

Thu Nov 15 18:11:23 CET 2001 Paolo Molaro <lupus@ximian.com>

	* ConstructorBuilder.cs: implement the interesting methods.
	* ILGenerator.cs: adapt for use with both a MethodBuilder and a
	ConstructorBuilder.
	* MethodBuilder.cs: add ImplAttributes.
	* ParameterBuilder.cs: adapt for ConstructorBuilder.
	* TypeBuilder.cs: add constructors handling.

Wed Nov 14 17:01:45 CET 2001 Paolo Molaro <lupus@ximian.com>

	* ConstructorBuilder.cs: added missing stubs and some implementation.
	* CustomAttributeBuilder.cs: added.
	* EventBuilder.cs: added.
	* FieldBuilder.cs: updates.
	* MethodBuilder.cs: stuff to implement P/Invoke methods.
	* ModuleBuilder.cs: added GetArrayMethod() stub.
	* ParameterBuilder.cs, PropertyBuilder.cs: updates.
	* TypeBuilder.cs: updates and stubs.

2001-11-10  Sean MacIsaac  <macisaac@ximian.com>

	* TypeBuilder.cs: Added implementation for TypeHandle.

Tue Nov 6 09:13:45 CET 2001 Paolo Molaro <lupus@ximian.com>

	* AssemblyBuilder.cs: define an internal constructor.

2001-10-07  Miguel de Icaza  <miguel@ximian.com>

	* AssemblyBuilder.cs: Reformatted.

	Added override keywords to those that needed them.

	Removed methods that we do not override, but just inherit

Tue Sep 25 16:53:08 CEST 2001 Paolo Molaro <lupus@ximian.com>

	* TypeBuilder.cs, ConstructorBuilder.cs, ModuleBuilder.cs: added.
