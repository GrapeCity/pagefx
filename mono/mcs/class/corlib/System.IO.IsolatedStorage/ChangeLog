2006-04-07  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageFile.cs: Loading/saving the identities used to 
	isolate the storage requires the permission to [de]serialize them too.

2005-11-09  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageScope.cs: Added missing [Serializable] in 2.0 profile

2005-10-04  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageFile.cs: Add a call to GC.SuppressFinalize in Dispose
	(even if we're not disposing anything).

2005-06-22  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageFile.cs: Only assembly evidences are considered to
	resolve policy. Changed resolve method used (instead of changing it's
	code).

2005-06-14  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageFileStream.cs: Remove Close method from NET_2_0.
	* IsolatedStorageFile.cs: Implemented missing MaximumSize property
	and GetPermission method.

2005-06-05 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* IsolatedStorageFileStream.cs: check the FileMode here as FileStream
	throws a different exception.

2005-04-25  Sebastien Pouliot  <sebastien@ximian.com>

	* INormalizeForIsolatedStorage.cs: Added [ComVisible(true)] for 2.0.
	* IsolatedStorage.cs: Added [ComVisible(true)] for 2.0 except for new
	property ApplicationIdentity.
	* IsolatedStorageException.cs: Added [ComVisible(true)] for 2.0.
	* IsolatedStorageFile.cs: Now calls UnprotectedGetEvidence to get the 
	assembly evidences. Added [ComVisible(true)] for 2.0.
	* IsolatedStorageFileStream.cs: Added [ComVisible(true)] for 2.0.
	* IsolatedStorageScope.cs: Added [ComVisible(true)] for 2.0.

2005-03-24  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageFile.cs: Added an assert for unrestricted file access
	to the class. This is "ok" as the user cannot control the base path 
	for isolated storage but will be updated to be more "precise" when
	imperative assert are supported in the runtime.
	* IsolatedStorageFileStream.cs: Changed constructors so the assert
	for unrestricted file access is limited to constructors (not the whole
	class). Added LinkDemand for UnmanagedCode to get Handle and 
	SafeFileHandle (2.0) properties.

2005-03-17  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageScope.cs: Add missing BOOTSTRAP_NET_2_0 to new enum 
	values. Fix #73046.
	* IsolatedStorageFile.cs: Remove commented security attributes.

2005-03-15  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorageFile.cs: Added CAS demands (imperative when possible)
	for IsolatedStoragePermission. The security attributes for NET_2_0 are
	commented until #73046 is fixed.
	* IsolatedStorageFileStream.cs: Now use StackFrame(2) to find which
	assembly is really calling the IsolatedStorageFileStream when no 
	default is supplied. Throw DirectoryNotFoundException when a directory
	inside the isolated storage is missing.

2005-01-31  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorage.cs: Added checks to get identities.
	* IsolatedStorageFile.cs: Added support for identities (assembly, 
	domain and, for 2.0, application).
	* IsolatedStorageFileEnumerator.cs: New. Internal enumerator for 
	IsolatedStorageFile.
	* IsolatedStorageFileStream.cs: Now use the new FileStream
	constructor to ensure filestream name stays [Unknown].
	* IsolatedStorageInfo.cs: Removed (no more required).
	* IsolatedStorageScope.cs: Added new 2.0 scopes: Application and
	Machine.

2004-07-11 Gonzalo Paniagua Javier <gonzalo@ximian.com>

	* IsolatedStorageInfo.cs: useGetFolderPath instead of getting "HOME".

2004-06-13  Gert Driesen <drieseng@users.sourceforge.net>

	* IsolatedStorage.cs: really mark the storage_scope field private

2004-06-09  Gert Dresen <drieseng@users.sourceforge.net>

	* IsolatedStorage.cs: use private variable for holding scope,
	set scope in InitStore method, removed need for extra protected 
	member (public API fix)
	* IsolatedStorageFile.cs: use InitStore to initialize scope

2004-05-12  Sebastien Pouliot  <sebastien@ximian.com>

	* IsolatedStorage.cs: More details on MonoTODO. Throw exceptions on
	AssemblyIdentity and DomainIdentity properties.
	* IsolatedStorageFile.cs: More details on MonoTODO.
	* IsolatedStorageFileStream.cs: Removed MonoTODO on class. Now use 
	Path.Combine to build filenames (constructor) and throw an exception 
	when we try to get the handle (as documented).

2003-07-30  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorageInfo.cs (CreateAssemblyFilename):
	(CreateDomainFilename): Replace String.Format with Path.Combine.
	
	* IsolatedStorageFile.cs:
	(GetStore): Update storage_scope accordingly.
	(GetUseStoreForAssembly): Include IsolatedStorageScope.User.
	(GetUseStoreForDomain): Include IsolatedStorageScope.User and
	IsolatedStorageScope.Assembly.
	
	* IsolatedStorage.cs:
	(CurrentSize):
	(MaximumSize): throw InvalidOperationExceptions. This is a
	subclass responsibility.
	(Scope): Implemented using a static field, storage_scope.
	(SeparatorInternal)
	(SeparatorExternal): Implemented. Use Path.DirectorySeparatorChar
	for SeparatorExternal.

2003-02-18  Jonathan Pryor <jonpryor@vt.edu>
	* IsolatedStorageFile.cs: Fix spelling error (GetUseStoreForDomain -->
	  GetUserStoreFor Domain).  Reported by 
	  Torsten Rendelmann <torsten.rendelmann@procos.com>.

2003-01-19  Sebastien Pouliot  <spouliot@videotron.ca>

	* IsolatedStorageFile.cs: Added missing [CLSCompliant(false)]
	to CurrentSize and MaximumSize to fix compilation (at least 
	under Windows/csc).

2003-01-18  Jonathan Pryor <jonpryor@vt.edu>

	- General: Get a simple implementation working.  Simple, not-all-there, but
	  sufficient to get "Programming C#" example 21-17 working under Mono.  This
	  doesn't say much, as it's not a stress-test by any means.
	* INormalizeForIsolatedStorage.cs: re-indent to fit mono code style
	* IsolatedStorage.cs: match mono coding guidelines
	* IsolatedStorageFileStream.cs: Add members that "C# In A Nutshell" claims
	  the class should override.  Most of these members just delegate to the
	  base class, though.  CreateIsolatedPath is used to get the actual filename
	  for the IsolatedStorageFileStream.
	* IsolatedStorageScope.cs: Documentation goes in monodoc, so there's no
	  point in having C# doc-tags.  Add "Roaming" member, which "C# In A
	  Nutshell" lists.
	* IsolatedStorageFile.cs: Public class documented in "C# In A Nutshell".
	  Simple implementation.  Will probably need work to conform with .NET,
	  address security concerns.
	* IsolatedStorageInfo.cs: Abstract IsolatedStorage information used by other
	  classes, such as the directory isolated storage is located under, how to
	  calculate the size of isolated storage, etc.

2002-02-19  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorageFileStream.cs: Added MonoTODO here. This class
	is completely stubbed out (over the summer) and didn't get
	properly MonoTODO'd.

2002-02-08  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorage.cs: Looked at MemberInfo.cs, another fellow
	abstract class. Oh, that's what it means! Removed unnesscessary
	MonoTODO attributes.

2002-02-07  Duncan Mak  <duncan@ximian.com>

	* IsolatedStorage.cs: Added to CVS, stubbed out the API.
	* IsolatedStorageException.cs: Implemented.

2002-01-07  Duco Fijma <duco@lorentz.xs4all.nl>
	* Created INormalizeForIsolatedStorage
