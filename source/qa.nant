<?xml version="1.0"?>
<project xmlns="http://nant.sf.net" name="QA Tasks" default="empty">

  <property name="dir.src" value="${project::get-base-directory()}"/>
  <property name="dir.silverlight.libs" value="${dir.src}/tools/Silverlight"/>

  <!--<property name="pfx.home" value="${environment::get-variable('PFXHOME')}"/>-->
  <property name="pfx.home" value="c:\pfx"/>
  <property name="dir.tools" value="${pfx.home}\tools"/>
  <property name="dir.pfx.libs" value="${pfx.home}\framework"/>
  <property name="dir.reports" value="${pfx.home}\reports"/>
  <!--<property name="dir.temp" value="${path::get-temp-path}"/>-->
  <property name="dir.temp" value="${pfx.home}\temp\api-status"/>
  <property name="report.xsl" value="${dir.src}\tools\api-status\api.xsl"/>
  
  <property name="apistatus.dir" value="${dir.reports}\api-status"/>
  
  <property name="qareport.dir" value="${dir.reports}\qa"/>
  
  <property name="nunit.report" value="${dir.reports}\nunit\DataDynamics.PageFX.QA.dll-results.xml"
            unless="${property::exists('nunit.report')}"/>

  <property name="deploy.dir" value="${dir.src}\Artifacts"
            unless="${property::exists('deploy.dir')}"/>
  
  <target name="empty">
  </target>

  <target name="qa.clean">
    <if test="${directory::exists('C:\QA\PageFX')}">
      <delete dir="C:\QA\PageFX"/>
    </if>
    <if test="${directory::exists('E:\QA\PageFX')}">
      <delete dir="E:\QA\PageFX"/>
    </if>
  </target>

  <target name="make-reports">
    <call target="api-status"/>
    <call target="qa-report"/>
  </target>

  <target name="api-status-local">
    <echo message="Generating Class Libraries Status Reports..."/>

    <mkdir dir="${dir.temp}"/>
    <mkdir dir="${apistatus.dir}"/>

    <foreach item="Line" in="${dir.src}\tools\api-status\libs.txt" delim=";" property="svl.lib,pfx.lib">
      <do>
        <property name="svl.lib" value="${string::trim(svl.lib)}"/>
        <property name="pfx.lib" value="${string::trim(pfx.lib)}"/>

        <if test="${not string::starts-with(svl.lib, '#')}">

          <echo message="Generating diff between ${svl.lib} and ${pfx.lib}"/>

          <property name="svl.file.api" value="${dir.temp}\${svl.lib}.svl.api"/>
          <property name="pfx.file.api" value="${dir.temp}\${pfx.lib}.pfx.api"/>

          <property name="lib" value="${dir.silverlight.libs}\${svl.lib}.dll"/>
          <property name="file.api" value="${svl.file.api}"/>
          <call target="api-info"/>

          <property name="lib" value="${dir.pfx.libs}\${pfx.lib}.dll"/>
          <property name="file.api" value="${pfx.file.api}"/>
          <call target="api-info"/>

          <property name="file1.api" value="${svl.file.api}"/>
          <property name="file2.api" value="${pfx.file.api}"/>
          <property name="file.dif" value="${dir.temp}\${pfx.lib}.dif"/>
          <call target="api-diff"/>

          <property name="report.htm" value="${apistatus.dir}\${pfx.lib}.htm"/>
          <property name="libname" value="${pfx.lib}"/>
          <call target="make-class-status-report"/>

        </if>
      </do>
    </foreach>

    <copy todir="${apistatus.dir}">
      <fileset basedir="${dir.src}\tools\mono\corcompare">
        <include name="cm/**"/>
      </fileset>
    </copy>

    <copy todir="${apistatus.dir}">
      <fileset basedir="${dir.src}\tools\api-status">
        <include name="*.htm"/>
        <include name="*.js"/>
        <include name="*.css"/>
      </fileset>
    </copy>
  </target>

  <target name="api-status">

    <call target="api-status-local"/>

    <mkdir dir="${deploy.dir}"/>
    
    <zip zipfile="${deploy.dir}\apistatus.zip">
      <fileset basedir="${apistatus.dir}">
        <include name="**"/>
      </fileset>
    </zip>

  </target>

  <target name="api-info">
    <exec basedir="${dir.tools}"
          program="pfx-api-info.exe"
          workingdir="${apistatus.dir}"
          commandline="${lib} /out:${file.api}"
          verbose="true"/>
  </target>

  <target name="api-diff">
    <exec basedir="${dir.tools}"
          program="api-diff.exe"
          workingdir="${path::get-directory-name(file1.api)}"
          commandline="/out:${file.dif} ${file1.api} ${file2.api}"
          verbose="true"/>
  </target>

  <target name="make-class-status-report">
    
    <exec basedir="${dir.tools}"
          program="nxslt2.exe"
          workingdir="${path::get-directory-name(file.dif)}"
          commandline="${file.dif} ${report.xsl} -o ${report.htm}"
          verbose="true"/>

    <exec basedir="${dir.tools}"
          program="rv.exe"
          commandline="/LIBNAME:${libname} /out:${report.htm} ${report.htm}"
          verbose="true"/>
    
  </target>

  <target name="qa-report-local">
    <mkdir dir="${qareport.dir}"/>
    <mkdir dir="${deploy.dir}"/>

    <copy todir="${qareport.dir}">
      <fileset basedir="${dir.src}\tools\QAReport">
        <include name="**"/>
      </fileset>
    </copy>

    <exec basedir="${dir.tools}"
          program="pfx-qa.exe"
          workingdir="${qareport.dir}"
          commandline="/nur:${nunit.report} /outdir:${qareport.dir}"
          verbose="true"/>
  </target>

  <target name="qa-report">

    <call target="qa-report-local"/>
    
    <zip zipfile="${deploy.dir}\customtests.zip">
      <fileset basedir="${qareport.dir}">
        <include name="**"/>
      </fileset>
    </zip>
    
  </target>

</project>