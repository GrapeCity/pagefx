#-------------------------------
#---------- Sprint 25 ----------
#-------------------------------

2008-08-05 sergeyt

	1. Run resharper "cleanup code" to reformat code using C# 3.0 "untyped vars" feature.

2008-08-04 sergeyt

	1. Refactored instance initializers. Tried to use non parameterless ctor for instance initializer,
	   but we can not use such ctor because of current implementation of System.Object.MemberwiseClone method.
	   NOTE: MemberwiseClone is used for delegates.
	2. Migrated PageFX development to VS2008.
	3. Fixed build script to use .NET 3.5 MSBuild tool.

#-------------------------------
#---------- Sprint 24 ----------
#-------------------------------

2008-08-01 sergeyt

	1. Fixed some bugs related to Pointer Emulation.
	2. Checked that samples are still working (including complex IssueVision sample).

2008-07 28-31 sergeyt

	1. Refactoring of Pointer Emulation.

2008-07-28 sergeyt

	1. Added unit test to check that pfc throws proper error in case of incompatible Flash API call.

2008-07-25 sergeyt

	1. Improved Wrapper Generator.
	   Added generating Flash Player version attributes for Flash API members.
	2. Implemented checking for API comaptibility for Flash API method calls.
	   TODO:
	   Check referencing of FP10 fields in FP9 context.
	   Add unit tests to check this pfc feature.

2008-07-24 sergeyt

	1. Added to TestEngine ability to play compiled swf files on FP10.
	   Checked that it works on buildmachine.
	   Extended test cases to run on FP10.

2008-07-23 sergeyt

	1. Added samples to use new FP10 Text Layout features.

2008-07-22 sergeyt

	1. Implemented AVM Vector as C# generic type.
	2. Extended test cases for Avm.Vector<T>.
	3. Updated Wrapper Generator to Avm.Vector<T> instead of templated vectors.
	4. Rewrapped FP10 API.
	5. Wrote some samples to use/check FP10 Drawing API.

2008-07-21 sergeyt

	1. Built latest ASC from Flex SDK.
	2. Made research of Vectors in ActionScript.
	   Found new instruction 0x53 (applytype).
	   Updated latest opcodes.tbl from AVM source code.
        3. Fixed in AVM CodeProvider construction of AVM Vector types using info from research.
        4. Refactored Code Model (changes related to GenericTypeInstance).

#-------------------------------
#---------- Sprint 23 ----------
#-------------------------------

2008-07-18 sergeyt

	1. Added to Wrapper Generator auto generation of AVM parametrized Vector instances.
	   Marked such instances with VectorAttribute.
	2. Added to pfc support for autogenerated Vector instances.
	   It is not completed because of problem with construction of Vector objects.

2008-07-17 sergeyt

	1. Migrated to latest AVM shell. Checked that many mono Array/Convert test suites are passed.
	2. Fixed importing of new multiname constant.
	3. Fixed Wrapper Generator to wrap FP10 API.

2008-07-16 sergeyt

	1. Used Object.setPropertyIsEnumerable to prevent dynamic properties being used in loop operations.
	   Enabled extension for AVM Object with System.Object methods.
	2. Downloaded lates source of Tamarin (AVM) and Flex SDK.
	3. Found changes in ABC format. Added new type of multiname constant.
	   Added support for this type of constant.
	4. Checked swf files created with pfc are working in FP10.

2008-07-15 sergeyt

	1. Added test cases to check casting operations on decimal numbers.
	2. Fixed casting op from int64 to decimal.
	3. Found bug in multi-dimensional arrays
	4. Partially fixed problem with calling System.Object methods 
	   on objects from Flash/Flex/ActionScript.

2008-07-14 sergeyt

	1. Replaced usage of Avm.Object as base class to usage of System.Object.
	   This fix problem with calling System.Object methods on such types.
	   Added case to FB to resolve problem of calling System.Object methods
	   on natural AVM objects.
	2. Added using System.Object instead of Avm.Object as base class
	   when developer excplicitly use it. TODO: Warn about this situation.
	3. Added mono test suites for System.Decimal.

2008-07-11 sergeyt

	1. Extended test cases to check override of ABC methods.
	2. Implemented override of ABC methods with optional parameters.

2008-07-10 sergeyt

	1. Optimized method dispatch for static calls using callstatic instruction.
	   Used note from avm2 overview document.
	2. Added stack trace to System.Exception.
	   Used AVM Error.getStackTrace to set System.Exception stack trace.
	   This will help to fix failed test cases.
	3. Detected and fixied regression found in nightly QA build.
	   Fixed problem of translation ternary expression passed as argument [ILTranslator]
	   This problem was found in XmlTextReader ctor.
	4. Implemented ability to override ABC methods with custon namespaces.
	   Added test case to check this feature.

2008-07-09 sergeyt

	1. Changed generation of ABC scripts.
	   Now every AbcInstance are placed in separate script.
	   Also implemented ordering of ABC scripts in order of AbcInstance definitions.
	2. Tried to reorder AbcInstances (style mixins are placed after application instance),
	   but it did not help to resolve problem with embedded assets.
	3. Found some info about problem with embedded assets an bugs.adobe.com.
	   See http://bugs.adobe.com/jira/browse/ASC-3235.
	4. Tried to reorder swf tag, excatly writing asset tags (bitmaps, shapes, sprites) after ABC tag.
	   Checked that it does not help to solve problem with embedded assets in RichTextEditor control.

2008-07-08 sergeyt

	1. Added python script to build all simple samples.
	2. Fixed continuous build.
	3. Run performance tests and reported current results.
	4. Extended swf dump tool.
	   Added dumping of swf chars in binary form to use for comparison of embedded assets.
	5. Checked that tags for icons of RichTextEditor toolbar have no changes after importing.

2008-07-07 sergeyt

	1. Fixed problem with strings in MX context.
	   Found that we can not extend AVM Object class with System.Object methods
	   because empty object becomes non empty and "for each in" loop on empty object
	   will not be empty and will perform a few iterations.
	   This error was found in MX ModuleManager.getAssociatedFactory method.
	   Disabled registaration of System.Object methods in AVM Object prototype.
	2. Checked that mono System.StringTest suite is completely passed.
	3. Fixed FixTernaryAssignment in ILTranslator.
	4. Fixed System.Xml.XmlTextReader. Replaced usage of ReferenceEquals on Equals.
	5. Fixed translation of br.false & br.true instructions on enum values.
	6. Checked that IssueVision sample are working.

#-------------------------------
#-------------------------------
#---------- Sprint 22 ----------
#-------------------------------

2008-06-27 sergeyt

	1. Extended native AVM String with methods that implement System.String interfaces
	   (IEnumerable, IConvertible, IComparable, ICloneable).
	2. Added more test cases to check type conversions with string interfaces.
	3. Checked that some important mono test suites are completely passed.
	4. Tried to compile IssueVision sample, and found that it is not working.
	   Obviously there is problem with String.

2008-06-26 sergeyt

	1. Fixed in ILTranslator translation of br.true and br.false instructions.
	   br.true on strings does not work correctly in AVM.
	2. Fixed System.String.Concat methods. Found that AVM replaces null string with "null".
	3. Got passing mono.System.StringTest suite.

2008-06-25 sergeyt

	1. Implemented mechanism to call instance methods as static methods.
	   This mechanism is used to use AVM string instead of System.String on AVM eval stack.
	2. Added to ABC generator native API extensions.
	   Added extensions for Object and String classes.
	3. Checked that 73 mono System.String tests are passed.

2008-06-24 sergeyt

	1. Checked again "checked cast operations".
	2. Started implementation of case 109436 (System.String as AVM String).
	   Rewrote System.String class. Removed m_value field (wrapped AVM string value).

2008-06-23 sergeyt

	1. Wrote UILib.swc with TestToolbar component that has buttons with icons.
	   Checked that icons used in TestToolbar are correctly loaded in sample app.
	2. Fixed duplicate tags in embedded asset import.
	3. Changed importing of multinames with one namespace in nsset.
	   Shuch multinames are imported now as qnames.
	4. Tried different hacks (ordering of assets, symbols),
	   but did not find the problem with embedded assets.
	5. Added test case to check "checked" cast operations with overflow checking for numeric types.
	6. Implemented checked cast operations.
	   Got passing all test cases.
	   Checked that mono.System.ConvertTest suite is passed.

2008-06-20 sergeyt

	1. Implemented algorithm to calc max_scope_depth, max_stack_depth of ABC method body.
	2. Extended RtfEditor sample with checking toolbar button icon to find problem with embedded assets.
	   Found that BitmapAsset is available, but it has null bitmapData,
	   it seams that flash player does not corrently link bitmap asset with class.

2008-06-19 sergeyt

	1. Improved embedding image assets which are embedded vis EmbedAttribute.
	   Added caching of image characters to avoid duplicate defs in swiff file.
	   Extended EmbedTest samle.
	2. Added implicit cast operator from System.Array to Avm.Array.
	3. Tried to relayout embedded assets, i.e. tried to import mixin classes before application classes,
	   but it does not help to resolve error with loading of RtfEditor toolbar icons.

2008-06-18 sergeyt

	1. Added unit tests to check SWF shapes read/write methods.
	   Fixed some bugs to get passing these tests.
	   These tests will ashure us that shapes will be correctly imported.
	2. Fixed importing of some embedded assets (cursors).
	   Icons of RichTextEditor toolbar is still not loaded.
	   Found that many symbols can be linked to one swf character.

2008-06-17 sergeyt

	1. Fixed some bugs in RSL linking.
	   Current pfc assumes that signed RSL file has .swz extension.
	   Fixed setting URI for RSLs.
	2. Found that custom RSL lib can simply created from SWC file by extracting "library.swf" entry from zip archive.
	3. Added some syntax shortcuts to specify RSLs in command line:
	   - now to link framework RSL you can simply write /cdrsl:mx
	   - pfc extracts library.swf from SWC if RSL is not specified or not exist.
	4. Added more tests and samples to check RSL linking.
	5. Improved importing of mixin classes (without need to iterate all classes).

#-------------------------------
#---------- Sprint 21 ----------
#-------------------------------

2008-06-11 sergeyt

	1. Worked upon problem with embedded assets. 
	   Added various hooks to detect error, but did not find solution to resolve the problem.

2008-06-10 sergeyt

	1. Worked upon problem with embedded assets.	

2008-06-09 sergeyt

	1. Extended ABC dumping tool.
	2. Started investigation of problem with embedded assets.

2008-06-07 sergeyt

	1. Extended reflection. Added to System.Type.m_create function to create instances.
	   Implemented System.Activator.CreateInstance method using Type.CreateInstance.
	2. Enabled DataSet mono tests to check DataSet Clone, Copy, GetChanges methods.
	3. Changed DataRow.IndexFromVersion to get DataSet.GetChanges working.
	4. Added test to check DataSet changes methods.

2008-06-06 sergeyt

	1. Implemented obtaining digest for RSL from SWC file.
	2. Fixed exception handling. Enabled custom exception routing for System.Object type.
	3. Checked that IssueVision sample is still working.
	4. Found how to create custom RSL from command line by using mxmlc (Flex Compiler).
	   Created custom MyRSL. Found that only RSL with disabled verification works normally
	   (RSL for trusted enviroments only).
	   Note currently only Adobe can sign RSLs.
	5. Added to pfc support for custom RSLs (trusted environments only).
	6. Added to pfc support for short form to specify RSL.
	   Short form: /rsl:MyRSL.dll. pfc now resolve other RSL pathes by extension.

2008-06-05 sergeyt

	1. Got working first sample which links MX framework RSL.
	   Digest is hardcoded with constant.

2008-06-04 sergeyt

	1. Investigated MX app linked to MX lib using RSL.
	2. Extended pfc command line options to support linking RSLs.

2008-06-03 sergeyt

	1. Implemented catching of any VM exception.
	   Refactored exception handling in ILTranslator and AvmInstructionProvider.
	   Implemented custom routing between exception handlers.
	   Checked that mono Array test suite is completely passed after this refactoring.
	   Added usage of one shared exception variable between all handlers within one method body.
	2. Disabled simulation of InvalidCastException.

2008-06-02 sergeyt

	1. Partially implemented catching of any VM exception.

#-------------------------------
#---------- Sprint 20 ----------
#-------------------------------

2008-05-30 sergeyt

	1. Fixed generation of IsArray methods.
	   Added test case to check that it works.
	2. Checked that simple test case for WriteXml of DataSet is passed.
	3. Added mono test suite for System.Data.DataSet.
	   Fixed some tests from this test suite.
	   Found that some tests depend on currently unsupported reflection calls.

2008-05-29 sergeyt

	1. Added mono test suites for System.Xml.
	2. Fixed problem with StackOverflow exception in CILTranslator.
	   Problem was found in some xml mono test.
	3. Implemented System.Guid. Added mono test suite for System.Guid.
	4. Added test case to check WriteXml of DataSet. Test was failed.

2008-05-28 sergeyt

	1. Extended IVUI.swc.
	   Added IssueList, HistoryList.
	2. Accomplished IssueVision sample with viewing facility.

2008-05-27 sergeyt

	1. Extended IVUI.swc.
	2. Fixed problem with illegal override error.
	   Problem was occured because of yesterday's fix 
	   for issue of overriding protected methods with public method.
	3. Rebuilt all flex samples and checked that they works properly.

2008-05-26 sergeyt

	1. Fixed problem with override protected method with public method.
	   Now all non private members have global namespace.
	   Later we can find better solution.
	2. Fixed System.Collections.BitArrayTest mono test suite.

2008-05-23 sergeyt

	1. Fixed continuous build.
	2. Linked IVUI.swc (UI skeleton of Issue Vision) to IssueVision sample.
	3. Implemented DataProvider for TreeView [IssueVision].

2008-05-22 sergeyt

	1. Fixed problem with empty while loops.
	   Simply enabled translation of nop instruction in ILTranslator.
	2. Fixed FillXmlns and FillNamespace in XmlTextReader.XmlAttributeTokenInfo.
	   Problem was with using ReferenceEquals on string objects. ReferenceEquals is replaced with Equals.
	   Problem is related with string interning.
	3. Found verify error in System.Data.XmlDiffLoader.LoadColumnAttributes.
	   Currently fixed by rewriting this method using more simple code structure.
	   Later we should normally fix this problem in ILTranslator.
	4. Got passing IVDiffGramTest test to check loading ADO.NET DiffGram.
	5. Checked that IssueVision diffgram is loaded in flash runtime.

2008-05-21 sergeyt

	1. Fixed problem with big enums.
	   It seems AVM verifier autogenerates part of cinit to init constant traits,
	   but he uses pushint instruction for uint constants (instead of using pushuint instruction).
	   Big enum leads to the following AVM VerifyError: Error #1032: Cpool index 96 is out of range 96.
	   Added explicit generation of cinit method for enum types [AbcGenerator].
	   Added test case to fix this problem.
	2. Added tests for XmlReader. Checked that they are passed.
	3. Fixed problem with static ctors.
	   Optimized calling of static ctors for referenced types in given method body.
	4. Fixed System.Array.CreateInstance. Note: DataTable requires support for creating dynamic array of DataRows.
	5. Fixed BeginCall in ILTranslator.
	6. Added test cases to check XmlTextReader.
	7. Got passing simple test of DataSet.ReadXml.

2008-05-20 sergeyt

	1. Fixed AddImplementedMethods in CLI AssemblyLoader.
	   Added check whether given iface method has explicit implementation.
	2. Fixed translation of stobj instruction when addr is this object.
	   Bug was found in Guid.ctor(string) method with "this = g" statement.
	   Added to IInstructionProvider.CopyToThis to solve this problem and implemented it on AVM backend.
	   Added GuidTest test case to check.
	3. Fixed handling of Type.GetTypeFromHandle.
	   Added check for presence of type token onto eval stack.
	   Also fixed ILTranslator analysis step to check Type.GetTypeFromHandle call.
	4. Fixed method naming issue in ABC generator.
	   Fixed DefineExplicitImplementation (fixed calling of accessors).
	   Added more test cases.
	5. Reduced System.Data lib.

2008-05-19 sergeyt

	1. Investigated how to with AVM+ XML objects.
	   Added custom members to XML and XMLList classes (indexers).
	   Provided inline code for XML/XMLList indexers [AbcGenerator].
	   Rewrapped Flash API (core.abc).
	2. Fixed BuildField in FLI AssemblyLoader.
	   Rewrapped MX swc files (flex.swc, framework.swc, rpc.swc).
	3. Added IVDataSet to IssueVision and try to call ReadXml.
	   Attempt was failed because of compilation errors.
	4. Fixed translation of cast operation from numeric type to System.ValueType.

#-------------------------------
#---------- Sprint 19 ----------
#-------------------------------

2008-05-16 sergeyt

	1. Added autogeneration of FlexInit mixin.
	   Added handling of the following metadata tags: Mixin, Effect, RemoteClass.
	2. Added resolving of namespace constants in Linker.
	3. Fixed IsAbcMethod for newobj instruction of ABC objects [ILTranslator].
	4. Got working flex WebService simple sample with PageFX.

2008-05-15 sergeyt

	1. Fixed continuous build.
	2. Tested communication with IssueVision Service using FlexBuilder.
	3. Fixed ABC/SWC Wrapper generator.
	   Fixed resolving of type by ABC multiname.
	   Added support for /mx option (short form to reference on MX framework library).
	   Fixed fields wrapping. Fixed appearance of duplicate names.
	4. Wrapped rpc.swc. It is needed to use flex WebService for communication with IssueVision Service.

2008-05-14 sergeyt

	1. Improved import of abc files. Added support to import external linked types.
	2. Added SortInstances to AbcFile.Finish to enshure correct ordering of instances.
	3. Fixed AbcMultiname.Equals.
	4. Rebuilt mixins.swc using external linking to mx.
	5. Rebuilt flash and flex samples and checked that they are still working.
	6. Fixed AssemblyLoader.BuildMemberType.
	   Now AVM Object is wrapped as System.Object to allow implicit casting System.Object to Avm.Object.
	   Rewrapped Flash API, flex.swc and framework.swc.
	7. Investigated how to work with MX Tree control.
	   Added simple flex sample using Tree control.
	8. Investigated autogenerated by Flex Builder classes of IssueVision WebService.

2008-05-13 sergeyt

	1. Changed ILTranslator.Op_Ldc with using PassByValue.
	2. Added unwrapping of System.String for parameters of ABC calls.
	   For example it is needed to get working such call: UIComponent.setStyle("fontWeight", "bold").
	3. Added preventing of boxing for parameters of ABC calls.
	4. Checked that 1,2,3 fixes do not break other test cases.
	5. Added to pfc support for CSC /recurse option.
	6. Added to tmx support for wildcards for input files (like csc recurse option).
	7. Fixed CLI AssemblyResolver.

2008-05-12 sergeyt

	1. Fixed bug with naming of embedded asset instances.
	2. Implemented tmx (Translator of MXML files to C#).
	3. Built skeleton of IssueVision UI in FlexBuilder.
	4. Found problem with calling of ABC methods that has object parameters.
	   We should prevent boxing of parameters for such calls.
	   This problem was found during fixing case #87516 (form.setStyle calls aren't working yet).
	   Also it can a problem for case #87515 (form.setConstraintValue) 
	   because "setConstraintValue" method actually uses "setStyle" method.

2008-05-08 sergeyt

	1. Fixed continuous build. Fixed config of System.Drawing lib.
	2. Compiled mono System.Web & System.Web.Services libs to reuse some stuff in IssueVision sample.
	3. Added to pfc option to fill compiler options with common references.
	4. Created Flex.Windows.Forms lib to wrap some WinForms controls using flex controls.

2008-05-07 sergeyt

	1. Fixed  Fixed release config.
	2. Fixed AbcCode.TypeOf.
	3. Fixed CommonDemoninator for bitwise operations in ILTranslator.
	4. Fixed mono.System.ConvertTest.ToString_MinMax_WithBase.
	5. Refactored AbcInstance methods used to define ABC methods.
	6. Added test case to check value type array casting.
	7. Fixed MainClassName in generation of MXFrame [SwfCompiler]
	8. Prepared solution for IssueVision sample.
	9. Compiled mono System.Drawing lib to reuse some simple stuff in IssueVision sample.

2008-05-06 sergeyt

	1. Fixed bug with System.Double boxing.
	   In fact fixed SystemTypes.GetCommonDenominator.
	2. Extended array cast tests.
	3. Fixed System.Array.CreateInstance.
	   Now you can dynamically create only single dimensional arrays.
	   Also some mono tests using directly/indirectly Array.CreateInstance can be enabled.
	4. Extended System.Type implementation.
	   Implemented: IsAssignableFrom, IsInstanceOfType
	5. Extended reflection support. 
	   Implemented Type.GetInterfaces
	   Extended reflection tests.
	6. Added test cases to test System.Diagnostics.Debug class.
	7. Changed System.GC. Made InternalCall methods empty.
	8. Implemented AvmTraceListener and used it in TraceImpl [corlib].
	9. Added test case to check Debug.WriteLine.

2008-05-05 sergeyt

	1. Added more test cases to check array cast operations.

#-------------------------------
#---------- Sprint 18 ----------
#-------------------------------

2008-05-04 sergeyt

	1. Optimized running of nightly build.
	2. Extended AbcCode with ability to create try/catch blocks.
	3. Implemented generation of cast_to methods in $pfx::runtime class.
	   These methods throw InvalidCastException when catching AVM TypeError in coerce operation.
	   Wrapped cast operation with calling of cast_to method.
	4. Added test case to check invalid casts.
	5. Excluded/fixed non working tests in mono.System.ConvertTest suite.
	6. Fixed unary negation for unsigned integral numbers.
	7. Extended "tools\cgen" - autogenerator for some corlib classes (globalization, unicode info).
	   Added autogeneration of DateTimeFormatInfo calendar fields.
	   Added autogeneration of CharUnicodeUnfo.GetUnicodeCategory.
	8. Fixed System.Convert.ConvertToBase8.
	9. Fixed System.Char.GetUnicodeCategory
	10. Fixed resolving of System.dll.
	11. Fixed bug with duplicate internal types in different assemblies.
	12. Fixed bug with SEH blocks translation.
	    Added enshuring of protected block translation [ILTranslator].
	13. Added test cases to check array casting operations.
	14. Got complete passing of the following test suites:
		- mono.System.ConvertTest [243]
		- mono.System.CharCategoryTest [10]
		- CSharp.Misc.Operators

2008-04-30 sergeyt

	1. Fixed CSharp.Arrays.TestGetValue test [problem was in ILTranslator.U64OR32].
	2. Fixed System.Array.SetValueImpl [corlib]
	3. Found that string can be coerced to number in AVM+.
	4. Added to unbox functions of numeric types checking on string type.
	5. Excluded non working tests from mono.System.DateTimeTest suite.
	6. Implemented CultureInfo.GetCultures [corlib]
	7. Checked that the following test suites are completely passed:
		- CSharp.Arrays [extended]
		- CSharp.Avm [NOTE: first run of any test from this suite is failed, second is passed]
		- mono.System.ArrayTest
		- mono.System.Collections.ArrayListTest
		- mono.System.Collections.HashtableTest
		- mono.System.Collections.QueueTest
		- mono.System.Collections.SortedListTest
		- mono.System.DateTimeTest

2008-04-29 sergeyt

	1. Refactored parsing for integral types [corlib]
	2. Fixed UInt64.AddOvf, UInt64.Parse.
	3. Fixed UInt64 mono test suite. Fixed TestParse.
	4. Fixed ternary params. Found new situation when type coercion error is occured.
	5. Fixed Int64 mono test suite.
	6. Fixed mono.System.SingleFormatterTest suite.
	7. Fixed Double.Parse method.
	8. Fixed mono.System.DoubleFormatterTest suite.
	9. Checked that the following test suites are completely passed:
		- mono.System.UInt64Test
		- mono.System.Int64Test
		- mono.System.SingleFormatterTest
		- mono.System.FloatingPointFormatterTest
		- mono.System.IntegerFormatterTest
		- mono.System.SingleTest
		- mono.System.DoubleTest

2008-04-28 sergeyt

	1. Fixed bug with ".constrained" instruction prefix.
	2. Added OverflowChecking test suite.
	3. Implemented checking overflow for arithmetic operations (add, sub, mul).
	   Checked that OverflowChecking test suite is passed.
	4. Fixed something in Int64 and UInt64 types:
		- Int64.CompareTo
		- UInt64.AddOvf
		- UInt64.SubOvf
		- Int64.Parse
	5. Checked that the following test suites are completely passed:
		- mono.System.TimeSpanTest
		- mono.System.SByteTest
		- mono.System.ByteTest
		- mono.System.Int16Test
		- mono.System.UInt16Test
		- mono.system.Int32Test
		- mono.System.UInt32Test

2008-04-25 sergeyt

	1. Implemented AddOvf and SubOvf methods for Int32 and UInt32.
	   Extended BCL.Numbers test suite to check that it's working in AVM+.
	2. Implemented MulOvf methods for Int32 and UInt32. Wrote nunit tests to check them.
	3. Extended BCL.Numbers test suite to check that MulOvf is working in AVM+.
	4. Fixed bug with ".constrained" instruction prefix.
	5. Fixed UInt64.CompareTo(object) and Int64.CompareTo(object) [corlib]
	6. Fixed the following test suites:
		- CSharp.Reflection.Test1
		- mono.System.BooleanTest [12]
		- mono.System.EnumTest [21]

2008-04-24 sergeyt

	1. Removed fix for in/decrement operations on static properties [in ILTranslator.Op_Call].
	   Fixed CSharp.Inrementing test suite.
	2. Fixed System.IO.Path class.
	3. Fixed comparison of 64-bit integral numbers in NUnit.Framework.Constraints.EqualConstraint.
	4. Excluded non supported tests from the following test suites:
		- mono.System.IO.BinaryReaderTest
			- ReadDecimal, ReadDecimalException (decimal is not supported yet)
		- mono.System.IO.BinaryWriterTest
			- WriteDecimal (decimal is not supported yet)
		- mono.System.DateTimeTest
		- mono.System.TimeSpanTest
	6. Fixed verify error with ternary params [ILTranslator.FixTernaryParam].
	   Added more complex test case when condition of ternary expression is more complex.
	7. Fixed CSharp.Misc.DateTimeTest (DateTime.Parse) test case.
	8. Fixed System.TimeSpan Add and Subtract methods. Bug with OverflowException.
	9. Fixed translation of ".constrained" instruction prefix.
	10. Fixed TimeSpan.Parse method.
	11. Fixed the following test suites:
		- mono.System.IO.PathTest [20]
		- mono.System.IO.StreamReaderTest [12]
		- mono.System.IO.StreamWriterTest [16]
		- mono.System.IO.BufferedStreamTest [42]
		- mono.System.IO.BinaryReaderTest [67]
		- mono.System.IO.BinaryWriterTest [18]
		- mono.System.TimeSpanTest [51]
	12. Excluded VB tests because they are currently not supported.	

2008-04-23 sergeyt

	1. Fixed translation of stind instruction.
	2. Found and fixed the following error:
	   VerifyError: Error #1030: Stack depth is unbalanced. 1 != 0.
             at System::NumberFormatter$/NumberToString_str_long_System_Globalization_NumberFormatInfo()
             at System::Int64/System.IFormattable.ToString_str_System_IFormatProvider()
             at System::String$/FormatHelper_System_Text_StringBuilder_System_IFormatProvider_str_obj[]()
             at System::String$/Format_System_IFormatProvider_str_obj[]()
             at System::String$/Format_str_obj()
             at System.IO::TextWriter/Write_str_obj()
             at System.IO::TextWriter/WriteLine_str_obj()
             at System::Console$/WriteLine_str_obj()
             at Program$/Test6()
             at Program$/Main()
             at global$init()
           Fixed FindBeginOfExpression in ILTranslator.
        3. Fixed double casting to param type
        4. Fixed Int64 bitwise shift operators [corlib].
        5. Checked that the following test suites are completely passed:
        	- mono.System.EnumTest
        	- CSharp.Misc.Int64Test

2008-04-22 sergeyt

	1. Fixed translation of switch instruction.
	   AVM requires int value to be onto the stack for index of lookupswitch instruction.
	   Added cast to int to fix the following VerifyError: Error #1058: Illegal operand type: uint must be int.
        2. Get passing all tests in System.Text.UTF8Encoding mono test suite.
        3. Excluded non working tests from the following mono test suites:
        	- System.Text.UTF8EncodingTest
        	- System.Text.UTF7EncodingTest
        	- System.Text.UnicodeEncodingTest
        	- System.Text.EncodingTest
        4. Fixed System.Text.UnicodeEncoding. Port unsafe methods to safe methods [corlib]           
        5. Fixed System.Text.Encoding. Implemented InternalCodePage.
        6. Fixed System.Text.StringBuilder.
            	- Fixed Replace method
        7. Checked that the following mono test suites are completely passed:
        	- System.Text.UTF7EncodingTest [14]
        	- System.Text.UTF8EncodingTest [80]
        	- System.Text.UnicodeEncodingTest [16]
        	- System.Text.EncodingTest [4]
        	- System.Text.StringBuilderTest [41]

2008-04-21 sergeyt

	1. [ILTranslator] Fixed bug with receivers for static calls occured
	   in PageFX.Simple.CSharp.Delegates.EventTest2.
	   Fixed receiver insertion when dup instruction is occured before call of static method.
	   Added simple test case without iterators to debug and fix this error.
	2. Checked that all tests from Iterators test suite are completely passed.
	3. Checked that mono Array test suite are passed.

#-------------------------------
#---------- Sprint 17 ----------
#-------------------------------

2008-04-18 sergeyt

	1. Fixed bug with unsigned branch instructions.
	   This bug was found in mono math test suite (MonoTests.System.MathTest.TestShortAbs).
	   Checked that mono math test suite are completely passed.
	2. Extended BCL.Numbers test suite. Checked that the suite are completely passed.
	3. Fixed System.Int32 Parse method. Bug with OverflowException.
	4. During fixing/changing System.Int32 Parse method I got the following error:
	   VerifyError: Error #1068: null and System.Exception cannot be reconciled.
	   Fixed this error. Bug was in translation of stind instruction [ILTranslator].
	5. Fixed translation of newarr instruction.
	   Added FixTernaryAssignment.
	6. Localized the following error occured in custom number formatting:
	   VerifyError: Error #1068: int and uint cannot be reconciled.
	   Fixed ternary expression for parameters.
	   Added more test cases for ternary expressions.
	7. Fixed System.Int32 mono test suite. Checked that all tests within test suite are passed.

2008-04-17 sergeyt

	1. Found and fixed bug with uint constants.
	   -1 == 4294967295 is false in avm.
	2. Fixed System.UInt32 parse test.
	   Fixed assert with OverflowException.
	   In future we should support checked() statement.
	3. Fixed System.Int32 parse test. The same problem with overflow exception.
	4. Fixed some tests in Sytem.MathTest mono test suite:
	    - TestDoubleRound2
	    - TestLog2 (excluded MS bugs)
	    - TestPow (excluded MS bugs)
	5. Checked that the following mono test suites are completely passed:
		- System.UInt32
		- System.ExceptionTest

2008-04-16 sergeyt

	1. Excluded some not supported test cases.
	2. Fixed CompareExchanged in System.Threading.Interlocked.
	   Checked that iterators became working.
	   Added more test cases from mono for iterators.
	   Only Test11 (event pipeline) are failed.
	3. Implemented fault SEH block.
	4. Fixed hex string formatting for integral types.
	5. Fixed System.Int16 parse method.
	   Checked that all System.Int16 mono tests are passed.
	6. Excluded not supported tests (related to File IO) from System.IO mono tests.
	7. Excluded non working tests from System.IO.MemoryStream.
	   Checked that all MemoryStream tests are passed.
	8. Checked that all tests are passed for the following mono test suites:
	   - System.ArrayTest
	   - System.BitConverterTest
	   - System.BooleanTest
	   - System.ByteTest
	   - System.SByteTest
	   - System.Int16Test
	   - System.UInt16Test
	   - System.SingleTest
	   - System.StringTest
	   - System.CharTest (excluded IsWhitespace_Complete because this test is version dependent)
	   - System.CharEnumeratorTest
	   - System.EnumTest
	   - System.ObjectTest
	   - System.RandomTest
	   - System.VersionTest

2008-04-15 sergeyt

	1. Regenerated ABCALL nunit test fixture.
	2. Fixed boxing of ulong enum types.
	   Added cast to enum underlying type.
	3. Fixed unboxing of 64-bit integral types.
	4. Fixed Int64 and UInt64 bitwise operators.
	5. Fixed translation of SEH blocks with complex flow graph.
	6. Fixed AbcIoTestDriver.
	7. Fixed type name in AbcGenerator.InitTypeInfo.
	8. Moved Enum GetValue and SetValue methods to corlib.
	   Removed their definition from AbcGenerator.
	9. Fixed mono Enum test suite.
	10. Implemented another approach of providing test cases for NUnit.
	    This approach uses Suite attribute.
	    Tried to run this approach on build machine. It seams that it does not work.
	                                 
2008-04-14 sergeyt

	1. Fixed translation of stelem CIL instructions.
	2. Fixed mono test suite for System.BitConverter class.
	   Excluded some version dependent asserts.
	3. Ported to C# monocode of InternalFromBase64 ves method.
	4. Fixed mono tests used to check Convert.FromBase64 methods.
	5. Fixed bug occured when size of one-dimensional array is ternary expression.
	   This bug was found in ToBase64Transform class.
	   Add small test case to check this situation.
	6. Fixed translation of ldind instruction.
	7. Fixed AbcGenerator.Reflection.InitTypeInfo method.
	   Bug with invalid name for nested types.
	8. Fixed some tests from mono System.Enum test suite.
	   
2008-04-13 sergeyt

	1. Extended mono tests.
	2. Partially implemented System.Buffer class.
	3. Partially implemented System.BitConverter class.
	4. Fixed wrapping of string constants. Rewrapped Flash API.
	5. Fixed linking of fields.

2008-04-11 sergeyt

	1. Got working AbcImport test cases.
	2. Improved ABC/SWC WrapperGenerator.
	   - Fixed wrapping of ABC const traits.
	   - Added generation of ctor overloads.
	   - Fixed wrapping of abstract methods.
	   - Fixed wrapping of params for global (defined in top level package) error types.
	   - Removed some unused members.
	3. Rewrapped Flash & AVM Core API.
	4. Fixed initialization of class traits for types derived from AVM global Error type.
	5. Extended compiler wiki page.
	6. Fixed PageFX.Simple.CSharp.Avm test suite.
	
2008-04-10 sergeyt

	1. Improved/optimized loading of nunit tests.
	   Now all nunit tests are precompiled and loaded from %PFXHOME%\tests directory.
	2. Fixed resolving of refenerences to ABC libs.
	3. Fixed calling of base methods. (Removed IsInternalCall check).

2008-04-09 sergeyt

	1. Accomplished System.Text.UTF8Encoding class.
	   This class is used in System.Xml.
	2. Compiled System.Data assembly using monocode.
	3. Fixed bug with calling of base ctors.
	   Added test case to check this error.
	4. Extended flex style mixins.
	5. Updated build script.
	   Renamed build.corlib target to build.libs.
	   Added build.tests target to build nunit tests.

2008-04-07 sergeyt

	1. Downloaded mcs module from mono codebase.
	   It is needed to generate parsers used in System.Xml assembly using jay tool.
	   Compiled jay tool and downloaded sed (gnu stream editor) required to run System.Xml\jay.bat.

#-------------------------------
#---------- Sprint 16 ----------
#-------------------------------

2008-04-05 sergeyt

	1. Added simple optimization - removing of duplicate instructions.

2008-04-04 sergeyt

	1. Added full name of method for unexpected internal call.
	2. Updated build script.
	   Added autocode target to regenerate auto code like NUnit test fixtures for PageFX test cases.
	   Removed deletion of artifacts directory.
	3. Fixed Avm.Date custom members. This fixes unexpected internall call in many DateTime methods.
	4. Investigated source of flex debugger.
	   Added comment to FB with subtasks and estimates for DebugerServer.

2008-04-03 sergeyt

	1. Fixed release build config.
	   Enshured call of _abc.Finish method in AbcGenerator.
	2. Changed resolving of unexpected InternalCall. Now compiler simply throws UnsupportedException.
	3. Fixed bug with initialization of value type fields.
	   Now static fields are initialized in static ctor, instance fields in instance ctors.
	4. Added generation of static ctor if type has no static ctor and has unitialized value type fields.
	   Added test case to check this situation.
	5. Extended mono tests. Added TimeSpanTest.

2008-04-02 sergeyt

	1. Updated build script. Changed name of deployed zip file.
	2. Fixed initialization of value type fields.
	   Excluded initialization for primitieve (boxable) types.
	3. Fixed bug with wrong type of ABC exception handler.
	   NOTE: This bug is created in sprint 15 (integration with flex)
	   with improvement of ABC importing.
	4. Fixed FLI WrapperGenerator. Fixed wrapping of global functions with rest (...) paramater.
	5. Rewrapped Flash API.
	6. Checked that PageFX and Mono Array test suites are passed.
	7. Added the following wiki articles on FB:
		- Generics
		- Performance
	8. Downloaded Mono 1.9 source.
	9. Updated Mono libs. Found that System.Xml requires jay tool to autogenrated XPathParser and XsltPatternParser.
	10. Installed Mono 1.9 for Windows.

2008-04-01 sergeyt

	1. Closed case 55717 (Update Build Scripts).
	2. Started compliling Mono class libs.

2008-03-31 sergeyt

	1. Fixed bug with initialization of value type fields.
	   NOTE: This bug is reported by OlegZ.
	   Added test case to check initialization of value type fields.

2008-03-28 sergeyt

	1. Improved error reporting in some places.
	2. Fixed bug with invalid name of MX SystemManager.
	   This bug is reported by OlegZ and is occured when you try to define MX app class in some namespace.
	3. Added implementation for System.Enviroment.TickCount to write performance tests.
	4. Wrote simple performance tests for Hashtable and String.Format.
	   Results:
	     - Hastable is about 100 times slower than CLR.
	     - String.Format - 150 times slower than CLR.

2008-03-26 sergeyt

	1. Added comments for case 55666 (Port Issue Vision).
	2. Resolved case 55667 (research debugger).
	3. Added implicit cast operators to corlib.
	   - System.Type to Avm.Class
	   - System.Delegate to Avm.Function.
	   Checked that this casting operators work.
	4. Added debug option to pfc.

2008-03-25 sergeyt

	1. Extended corlib make it easy porting of code. Added security stuff and something else.
	2. Analized Issue Vision source code.

2008-03-24 sergeyt

	1. Fixed pop of base ctor call.



2008-03-21 sergeyt

	1. Added to Delegate AddEventListenets and RemoveEventListerns method.
	   They used to implement add_EventName and remove_EventName calls.
	2. Fixed reflection (init type methods).
	   Implemented Assembly.InitType in C# to simplify finding errors.
	   Formerly it was implemented in compiler.
	3. Complicated ButtonTest sample.
	4. Reorganized samples folder.
	5. Added sample simple\flash\MoveableCircle.

2008-03-20 sergeyt

	1. Fixed writing of Shape curve edge.
	2. Added unit test to check SwfTag.Clone method.
	3. Wrote simple RtfEditor sample in Flex Builder.
	4. Extended style mixins.
	5. Added detection of other mixins using [Mixin] metadata tag.
	6. Added generation of events to ABC/SWC Wrapper generator.
	7. Rewrapped Flash API, flex.swc, framework.swc.
	8. Added inline code for event methods in Linker.
	9. Complicated ButtonTest sample with click event handler.
	   Compiled the sample and checked that it works.

2008-03-19 sergeyt

	1. Checked that old samples are still in working state.
	2. Fixed importing of swf assets.
	3. Fixed writing of SwfSprite.
	4. Fixed ResourceBundle compiler.
	6. Successfully compiled Alert HelloWorld sample.
	7. Added simple samples to check the following MX controls: Button, ComboBox.
	   And checked that they works.
	8. RichTextEditor does not properly works. Reason: something with importing of assets.
	9. Extended roadmap page on wiki.

2008-03-18 sergeyt

	1. Added SwfTagDecodeOptions.DonotDecodeImages to improve swc linking performance.
	2. Implemented import of SWF tags from external movie.
	   This include sprite and shape importing.
	   TODO: Extend importing of tag dependencies.
	3. Added generation of MX app members:
	   - iinit
	   - override initialize
	   - InitStyle
	4. Hacked calling of MX app ctor. Now MX app ctor is used as app "initialize" event handler.
	5. Compiled AllerHello world sample. Current error:
	   VerifyError: Error #1014: Class mx.core:IContainer::hitArea could not be found.
	   Something is not imported.
	6. Added roadmap page on wiki.

2008-03-17 sergeyt

	1. Extended AbcInstance with Define methods to simplify adding slots and methods.
	2. Optimized implementation of mx.core.SystemManager.info method.
	3. Investigated flex mixins. Extended flex notes on wiki.
	4. Found a way how to see mxmlc auto generated code (i.e. "-keep" compiler option).
	   Investigated generated files. Found that:
	   - Style mixins are the same for all applications.
	5. Downloaded Flex SDK with flex compilers/debugger source.
	6. Compiled with FlexBuilder StyleMixins.swc for importing to MX application.
	7. Wrote skeleton to import style mixins.

2008-03-14 sergeyt

	1. Improved swc linking.
	   Added linking and importing of embedded assets (class traits with Embed metadata tag).
	   Implemented importing of external swf characters (from another swf file).
	   TODO:
	   - Implement importing of sprite characters.
	   - Check importing of embedded swf assets.
	2. Fixed importing of method body code.
	   More precisely before importing code we should translate branch offsets to indices because
	   size of instructions can be changed and therefore we should retranslate branch offsets.
	3. Fixed importing of AbcInstance. SuperType should be imported before imported AbcInstance.
	4. Fixed ResourceBundle (RB) compiler. Added importing of RB super type and fixed RB iinit method.
	5. Compiled AlertHello sample. Sample was compiled, but swiff file does not works.

2008-03-13 sergeyt

	1. Changed ABC/SWC Wrapper Generator.
	   Now SWC wrapper is created without using merging of all ABC files defined in swc library.
	2. Implemented loading (resolving) of resource bundles from *.properties files.
	3. Implemented loading (resolving) of resource bundles from *_rb.swc files.
	4. Extended ABC Define API. Simplified creation of ABC scripts.
	
2008-03-12 sergeyt

	1. Refactored AbcTrait. TraitData is encapsulated in AbcTrait class.
	2. Improved SwfCompiler.
	3. Wrote samples in Flex Builder for investigatation.
	   Found that HelloWorld sample based on "ActionScript project" is successfully compiled,
	   but does not work (some runtime errors from StyleManager are ocrrued when you try
	   to play result swiff file). The same sample normally works as "Flex Project".
	   It seems that "ActionScript project" has no necessary "style mixins".
	4. Wrote sample to test mx.controls.Alert component.
	5. Wrapped flex framework.swc.
	6. Improved ABC Import API.
	   Added ability to lookup instance in previous ABC file defined in swiff file.
	   Integrated ResourceBundle Compiler (rbc).

2008-03-11 sergeyt

	1. Fixed bug with nop translation.
	2. Renamed SwfGenerator to SwfCompiler and moved it to SwfCompiler folder.
	3. Implemented ResourceBundle compiler.
	4. Added to ABC dumping tool ability to filter instances imported from SWC or ABC files.
	   It helps to find autogenerated classes by flex compilers.
	5. Extended wiki implementation notes.
	6. Improved error reporting facility in pfc.
	7. Implemented generation for MX SystemManager frame in SwfCompiler.
	8. Changed translation of store field instructions for fields with EmbedAttribute
	   (i.e. field is used to define embedded asset). Value for such fields is ignored
	   and simply poped from eval stack.
	9. Added call of static ctor for main class (class with entry point or root sprite).
	   And checked that it works.

#-------------------------------
#---------- Sprint 14 ----------
#-------------------------------

2008-03-07 sergeyt

	1. Extended implementation notes on wiki.
	2. Improved ABC Import API.
	   Fixed importing of method body SEH entries.
	   Fixed class traits initialization.
	   Separated cinit for autogenerated subclass of embedded assets.
	3. Got working EmbedTest sample. See samples\simple\flex\EmbedTest.swf.
	4. Started MX integration.
	   Started ResourceBundle Builder (RBBuilder).

2008-03-06 sergeyt

	1. Improved ABC Import API.
	2. Removed translation of nop instruction.
	3. Fixed cinit for autogenerated asset classes.
	4. Fought with flash VerifyError: Error #1014: Class mx.core::FlexBitmap could not be found.

2008-03-05 sergeyt

	1. Investigated MX sample. Got more knowledge about first swiff frame generated with flex compiler.
	   Need to auto generate subclass of mx.managers.SystemManager and override the following methods:
	   	- create(... params): Object - creates flex module
	   	- info():Object - provides module (application) info
	2. Started linking swc. Compiled bad swiff file.
	3. Understood how to in a different way implement static ctors.

2008-03-04 sergeyt

	1. Extended EmbedAttribute.
	2. Wrote sample to test Embed tag in Flex Builder.
	3. Added avm.CreateInstance(Avm.Class klass). Implemented as inline code in PFC.
	4. Added handling of fields with EmbedAttribute.
	5. Improved AbcAssemblyLoader used to wrap abc/swc files.
	   Fixed name conflict of fields and accessors in AbcAssemblyLoader.
	   Added filter of members with special MX internal namespace.
	   Added filter of internal types.
	6. Changed /swc option on /abc option in AbcWrapperGenerator.
	7. Wrapped flex.swc. Added sdks folder.

2008-03-03 sergeyt

	1. Changed ABC/SWC wrapper generator.
	   Removed wrapping of "rest" (...) parameter using "params object[] rest".
	   Now generator creates some number (default is 10) of method overloads.
	   Why was it done? Because CSC explicitly creates array to call method with end "params argument".
	   Also overloads are created for optional parameters (with default values).
	2. Added EmbedAttribute to implement flash embedded assets in flex declarative manner.
	3. Added /swc to AbcWrapperGenerator.
	4. Rewrapped Flash API. Checked that simple samples are still in working state.

2008-02-29 sergeyt

	1. Fixed MATRIX/RECT/CXFORM records reading/writing in swiff library.
	2. Extended SWF Graphics API. Added implementation for all brushes except GraphicsPathGradientBrush.
	3. Optimized loading of receiver for static calls in AbcGenerator.

2008-02-28 sergeyt

	1. Added SwfGraphics with GraphicsPath rendering API.
	2. Extended SWF IO unit tests. Fixed ReadSB, WriteSB methods.
	3. Wrote working swiff file with moving rectangles. See samples\misc\MovingRectangles.swf.

2008-02-27 sergeyt

	1. Extended SWF IO unit tests.
	2. Extended SWF Library. Implemented DefineShape tags.

2008-02-26 sergeyt

	1. Implemented WriteBody for DefineBitsLossless(2).
	2. Added unit tests to check DefineBitsLossless swf tags.
	3. Added unit tests to check SwfReader and SwfWriter.
	4. Fixed SwfTagFactory and SwfActionFactory.

#-------------------------------
#---------- Sprint 13 ----------
#-------------------------------

2008-02-22 sergeyt

	1. Fixed avm verify error found in DateTime parsing.
	2. Checked that some DateTime Parse mono test cases are passed,
	   and some failed but not because of avm verify error.

2008-02-21 sergeyt

	1. [swf] Extended SWF library. Finished DefineBitsLossless tag.
	2. [SwfGenerator] Added RDF metadata tag with pagefx info.
	3. [abc] Added dumping of images stored in swiff file.
	4. Disabled SWFALL unit tests to avoid hanging of build machines.
	5. Localized avm verify error occured in DateTime parsing.
	   Wrote simple test case to simplfy bug fixing.

2008-02-20 sergeyt

	1. Added simple flash samples.
	2. [ILTranslator] Added dumping of stack state for every basic block in order to find solution
	   how to fix avm "VerifyError: Error #1030: Stack depth is unbalanced. 0 != 1"
	   occured in DateTime._DoParse method.
	3. [corlib] Added null checking in string implicit conversion operators.
	4. Investigated avm verify error occured in DateTime parsing.
	5. [swf] Extended SWF library.

2008-02-19 sergeyt

	1. Fixed type conversion from types inherited from native AVM object type.
	2. Fixed writing FileLength field in compressed swiff files.
	3. Fixed NewLine (EOL) handling in flashell. Now console works via flash external interface.
	4. Adapted FLI Test Driver to run test cases on flash runtime.
	5. Adapted QA UI to run test cases on flash runtime.
	6. Changed build script to prepare environment to run test cases on flash runtime. I.E. flashell is installed.
	7. Enabled SWFALL NUnit tests.
	8. Added new pfc command line options:
	   - framesize:width[,height] 		(aliases: frame-size)
	   - framewidth:width 			(aliases: frame-width)
	   - frameheight:height 		(aliases: frame-height)
	   - framerate:value 			(aliases: frame-rate)
	   - flashversion:version 		(aliases: frame-version)
	   - rootsprite:<full class name>	(aliases: root-sprite, mainsprite, main-sprite)
	   - compressed[+|-]
	   - bgcolor:#hhhhhh			(aliases:backgroundcolor, background-color)
	9. Improved AbcGenerator to detect root sprite.
	10. Added implicit conversion between System.String and Avm.String.
	11. Wrote simple samples which are used Flash API.
	    These samples are successfully compiled with pfc and generated swiff files correctly work in Flash Player.

2008-02-18 sergeyt

	1. Fixed TeamCity pagefx build configurations. Fixed artifacts path.
	2. Changed build script. Added deployment of customtests.zip for TeamCity "Custom Tests Log".
	3. Generated SWFALL.cs NUnit TestFixture to run test cases on flash runtime.
	4. Optimized avm.IsFlashPlayer method implementation.
	5. Improved pfc.exe. Added handling of command line options.
	6. Updated flashell to play swf files.
	7. Generated first swiff file. Fixed some problems in SwfGenerator and AbcGenerator.

2008-02-15 sergeyt

	1. Finished AbcAssemblyLoader used to API defined in abc files.
	2. Done Flash API wrapping.
	3. Done ABC linker using QNameAttribute rejecting IndexAttribute.
	   Now we support manual wrapping using c# attributes.
	   TODO: For MX support:
	   - Add swc file as embedded resource when wrapping swc file.
	   - Resolve resource dependencies in compiler
	4. Got compilable state of corlib.
	5. Added ability to understand that code run on flash player.
	6. Implemented ConsoleWriter for flash and avmplus.
	7. Checked that test cases working in AVM+ with new corlib.

2008-02-14 sergeyt

	1. Fixed automatic reporting feature in build script (test results).
	   TODO: Make it as "Custom Tests Log" in TeamCity.
	2. Changed abc wrapping (AbcAssemblyLoader).

2008-02-13 sergeyt

	1. Implemented base skeleton for SwfGenerator.
	   Added generation of all necessary tags.
	2. Updated abc tool to dump and wrap swc files.

2008-02-12 sergeyt

	1. Implemented flashell to play swiff files.
	2. Fixed bug in ABC Reader. During investigation of MX "Hello World" sample
	   I detected that ExceptionInfo variable name is multiname, but not string constant.
	3. Started SwfGenerator using info acquired during investigation of swiff files generated with Flex Builder.


2008-02-11 sergeyt

	1. Fixed stupid bug in Assembly.GetType(int) made in Friday during making reflection optimizations.
	2. Fixed boxing/unboxing (avm coersion verify error).
	3. Checked Object.MemberwiseClone with private fields.
	4. Added email reporting to build script and QA project.



2008-02-08 sergeyt

	1. Reduced number of internal calls. Removed some pfx compiler generated methods.
	2. Implemented Object.MemberwiseClone using Reflection.
	3. Implemented FieldInfo.GetValue and SetValue using Reflection.
	4. Optimized metadata (reflection type info) loading in order to reduce code size.
	   Implemented dynamic initialization of System.Type instances.

2008-02-07 sergeyt
	
	1. Extended test case for 64-bit integral numbers.
	2. Fixed Array.Copy for values types.
	3. Fixed Object.GetHashCode.
	4. Fixed case insensitive string comparison.
	5. Checked that all Mono System.Collections test cases are passed.
	6. Fixed translation of ret instruction.
	   Added cast to return type of translated method.
	7. Detected some verify errors using DateTime mono test cases.

2008-02-06 sergeyt

	1. Added support for 64-bit (long) enums.
	2. Fixed unboxing of primitive types from enum types.
	   This is used used in Array copying.
	3. Fixed translation of exception handler blocks.
	   In AVM+ exceptions are handled in given order
	   (excplictly defined by array of ExceptionInfo entries)
	4. Fixed NUnit EqualConstraint for numeric comparison.
	5. Fixed array type checking (is operator, e.g. arr is int[]).
	6. Disabled some test cases which is not working in MS CLR.
	   Used NOT_MSCLR compilation constant.

2008-02-05 sergeyt

	1. Fixed translation of arithmetic operations in ILTranslator.
	   Added necessary casting in unsigned integer operations.
	2. Found that in AVM+ right shift operation can be signed and unsigned.
	   Fixed translation of bitwise right shift operation.
	3. Got simple test cases with 64-bit integers working in AVM+.
	   Need more test cases for arithmetic operations.
	4. Changed translation of branch operations in ILTranslator.
	   Now ILTranslator takes into account unsigned integer branch operations.
	   Added Null and NotNull constants to BranchOperator enum in order
	   to optimize the CIL sequence of isinst and brtrue/brfalse operations.
	5. Optimized parameterless ToString for numeric types using native toString method.

2008-02-04 sergeyt

	1. Optimized creation of one-dimensional arrays.
	   This optimization also reduces code size and avmdump.
	2. Fixed translation of branch operations in ILTranslator.
	3. Optimized ctor calls (changed translation of newobj instruction).

2008-02-01 sergeyt

	1. Added casting of computed value on eval stack to parameter type.
	2. Fixed getting result type fro arithmetic operations.
	3. Optimized finding of system types (frequently used types).

2008-01-31 sergeyt

	1. Fixed initialization of value types.
	2. Partially implemented Int64/Decimal support

2008-01-30 sergeyt

	1. Added generation of implementation for Enum.GetValue, Enum.SetValue methods.
	2. Fixed translation of switch instruction in ILTranslator.
	3. Added Mono EnumTest.
	4. Fixed definition of constant fields in AbcGenerator.
	5. Added to build script compilation of PageFX corlib. It is needed for QA build project.

2008-01-29 sergeyt

	1. Fixed unsigned to signed integer number conversion.

2008-01-28 sergeyt

	1. Added Generation of NUnit TestFixture for PageFX test cases.
	2. Partially implemented System.DateTime using native AVM Date class.
	3. Implemented System.TimeZone using stuff from old corlib.

#-------------------------------
#---------- Sprint 11 ----------
#-------------------------------

2008-01-25 sergeyt

	1. Fixed AbcLinker to properly call global functions. Fixed calling of AVM global functions.
	2. Added FixMethodBodies to AbcFile to enshure that all constants was correctly imported.
	   In some cases it can help to prevent generation of bad ABC file.
	3. Fixed value type array initialization when uint array size is onto the eval stack.
	4. Fixed killing of temp variables that will be used in emulation of pointers on array elements or object fields.
	5. Fixed illegal override avm verify error when interface method is excplitly reimplemented in derived type.
	6. Fixed avm verify error when type of trueValue or falseValue in ternary assignment does not equal
	   to left part of assignment.
	7. Added generation of report with test results in wiki format.

2008-01-24 sergeyt

	1. Added OptimizeCode, EmitDebugInfo options to QAForm.
	2. Improved generation of NUnit Main function. Added support to print exceptions.
	3. Fixed unbox function for boxable types to throw InvalidCastException.
	4. Fixed translation of .constrained instruction in ILTranslator.
	   Boxing is used to translate this instruction.
	5. Added NOTPFX compilation constant to exclude test cases that can not be passed in AVM+.
	   Excluded non working test cases with notes.
	6. Fixed problem with inserting receiver for static calls when first input edge is from loop header.


2008-01-23 sergeyt

	1. Implemented enum types
	2. Fixed unboxing of primitive types.
	3. Fixed Array.Copy.
	4. Get all Mono Array test cases working in AVM+.
	5. Checked that the following Mono Collections test suites completely are working in AVM+:
		- StackTest
		- ComparerTest
		- BitArrayTest - 2 test failed

2008-01-22 sergeyt

	1. Fixed initialization of local variables of value types.
	2. Fixed array getters and setters.
	3. Fixed initialization for arrays with element type of value type.
	   Fixed resolving of array Address method for value type arrays.
	4. Fixed problem with exception variable used in catch block.
	5. Got 95.6% of Mono Array test cases working in AVM+. Only 4 tests are failed.

2008-01-21 sergeyt

	1. Fixed loading of FieldRVA metadata table to fix problem with array initialization.
	2. Fixed problem (invalid array element type) with array instructions (ldelem, stelem).

2008-01-18 sergeyt

	1. Fixed bug with Rank != 1 for one-dimensional arrays.
	   Now compiler explicitly set Rank = 1 when wrapping native array.
	2. Changed array getters and setters to work correctly for primitive boxable types.
	   Added m_box and m_unbox functions to System.Array. Changed array initialization.
	3. Fixed bug with problem of translation relation operation.
	   CLR uses cgt.un to compare result of isinst and ldnull instructions, but this was not working in AVM+.

2008-01-17 sergeyt

	1. Resolved amv.NewArray(int n).
	2. Implemented ctor, getter and setter for multidimensional arrays.

2008-01-16 sergeyt

	1. Added to QAForm ability to select .NET framework version.
	2. Fixed problem with generics (CSC 2.0 prefers to use generic methods of System.Array class).
	   Now in AbcSerializationTestDriver two assemblies are compiled. clr.exe for CLR, avm.exe for AVM.
	   clr.exe is compiled with mscorlib, avm.exe - with PageFX corlib.
	   clr.exe is needed to compare test results. avm.exe is used to compile abc file.
	3. Added special resolving in CLI AssemblyLoader for ctors of multidimensional arrays, Get and Set methods.

2008-01-15 sergeyt

	1. Accomplished wrapping of native array with System.Array.
	2. AbcGenerator was broken on partial classes to simplify support of this big class.
	3. Extended reflection support:
		1. Some Type.Is (like IsClass, IsArray) methods are now working
		2. Type.GetTypeCode is working now
	4. Added ability to specify .NET framework version for CompilerConsole.
	   It is needed to use compilers from .NET 1.1.
	5. Added more test cases
	6. Added options (BreakInvalidMetadataToken, BreakInvalidMemberReference) to CLIDebug to enter to debugger
	   when invalid metadata token is occured or can not be resolved.

2008-01-14 sergeyt

	1. Added report generation to PageFX Test Runner (QAForm).
	2. Got the folowing Mono test suites working in AVM+:
		System/BooleanTest
		System/CharEnumeratorTest
		System/ObjectTest - note that current default implementation of GetHashCode
		                    is not economic by code size.
		System/StringTest
		System/VersionTest
	3. NOTE: Mono CharCategoryTest is working in AVM+, but not working in MS.NET 2.0.
	4. Added Mono tests for System.Collections and adopted them to corlib.
	5. Started wrapping of native array with System.Array.
	

#===================================================================================================

2008-01-11 sergeyt

	1. Removed unecessary copying of string objects, but it seems that string copying is required in store instructions.
	2. Fixed type initialization when referenced to static field (ldsfld instruction).
	3. Got more test cases from Mono String TestSuite working in AVM+.

2008-01-10 sergeyt

	1. Fixed type initialization. Now static ctor is called when type is first time referenced
	   (cases: static call, set of static field, newobj, newarr). Thus behavior is the same like CLR one.
	2. Removed ConsoleWriter.WriteLine.
	3. Implemented MemberwiseClone without using Reflection.
	4. Added more test cases

2008-01-09 sergeyt

	1. Fixed bug with finding ImplementedMethods for given methods (problem with "new" methods).
	2. Fixed bug with calling of super (base) methods.
	3. Fixed bug with inserting receiver for static and ctor calls
	   (when first argument is ternary operator or boolean expression).
	4. Fixed naming of accessors in AbcGenerator.
	5. Fixed generation for explicit implementations in AbcGenerator.
	6. Added more test cases.

2007-12-28 sergeyt

	1. Implemented special handling of mono test cases.
	   TestCase is generated for every test method with Main method to run this test case.
	2. Adapted mono test cases to corlib.

2007-12-27 sergeyt

	1. Fixed bug skipping of finally SEH block. Changed MethodBody, ILTranslator and flow GraphBuilder.
	2. Fixed translation of endfinally instruction in ILTranslator.
	3. Added option to not use "scope stack restoration" technique that was used to fix AVM verifier bug
	   (related with wrong frame state monitoring).
	4. Changed System.Threading.Monitor, used dummy implementation for InternalCall methods.
	5. Fixed SEH translation.
	6. Added mono NUnit tests to QA project.

2007-12-26 sergeyt

	1. Fixed GraphBuilder to corretly handle endfinally instruction (with FlowControl = Return)
	2. Added EofCallVoid option to GraphBuilder.

2007-12-25 sergeyt

	1. Added NUnit.Framework source code to corlib.
	2. Added reference to NUnit.Framework.dll when compiling test case source code.
	3. Added IEEEFloat to implement BitConvertor. BitConverter is used in floating number formatting.
	4. Added NUnit test fixture to check IEEEFloat.
	5. Added option to not use newactivation instruction for exception handling.

#Sprint #10 ========================================================================================

2007-12-24 sergeyt

	1. Added implemenation for GetValue and SetValue methods of System.Reflection.FieldInfo class
	2. Got Object.MemberwiseClone working in AVM+
	3. Got concatenation of delegates working in AVM+
	4. Got delegate subtract operation working in AVM+

2007-12-21 sergeyt

	1. Fixed bug with incremeting of static property.
	2. Fixed bug with passing boolean or ternary expression as an argument.
	3. Fixed translation of ldftn instruction in ILTranslator.

2007-12-20 sergeyt

	1. Added PassByValue for load instructions in ILTranslator.
	2. Fixed copy value for strings in AvmInstructionProvider.
	3. Added copy value for store instructions in ILTranslator.
	4. Fixed translation of initobj instruction in ILTranslator.

2007-12-19 sergeyt

	1. Fixed bug incorrect boxing of this value when calling this method
	2. Added Arithmetic class which implements function to determine type for binary or unary operation.
	3. Improved ABC Import API.
	3.1. Added more checks.
	3.2. Fixed AbcFile.ImportType by multiname.

2007-12-18 sergeyt

	1. Added dumping of translation map from CIL to ABC

2007-12-17 sergeyt

	1. Fixed bugs in ILTranslator.
	1.1. Boxing of primitive types when the last one is receiver
	2. Fixed bugs in AvmInstructionProvider.
	2.1. Added type coercion when argument reference is unwrapped. This fix resolves AVM VerifyError #1068.
	3. Changed corlib to fix avm verify errors

2007-12-14 sergeyt

	1. Downloaded latest avm
	2. Found bug in avm verifier.
	   Verifier indicates situation when ScopeStack of current frame (basic block) is different
	   in target frame (target of branch instruction). Really ScopeStack remain unchanged during all body frames.
	3. Found workaround to solve bug with avm verifier.
	4. Handled protected blocks in ILTranslator by inserting BeginTry, EndTry code provided by IInstructionProvider
	5. Handled exception handler blocks in ILTranslator by inserting begin and end code
	   provided by IInstructionProvider

2007-12-13 sergeyt

	1. Added ABC code generation for Delegate ctor and Invoke methods
	2. Fixed problem with store static field instruction in ILTranslator
	3. Downloaded latest source code for Tamarin. It seems that now AVM supports decimal numbers.

2007-12-12 sergeyt

	1. Implemented most steps of ILTranslator

2007-12-11 sergeyt

	1. Added option to GraphBuilder to not remove single unconditional branches
	   and insert basic block with only goto instruction. Note we does not need
	   to remove this blocks for low level translation.

2007-12-06 sergeyt

	1. Changed naming of methods in ABC Generator using C++ way.
	   In future to reduce code size we can add option to name methods and properties
	   using more shorter names (numbers, letters)

2007-12-04 sergeyt

	1. Decompiler:
	1.1. Added more test cases
	1.1. Implemented more clear solution to decompile boolean expressions.
	1.2. Fixed decompilation for switches & big switches
	1.3. Fixed Flow Graph Builder. There is situation when branch instruction also is
	     a target of other branch instruction. In this case basic block must contain only one instruction

	2. Improved debugging hooks for QA:
	2.1. Added more debug options to decompiler (last error)
	2.2. Added logging facility to observe deadlocks (e.g. when decompiler or compiler a long time works)
	2.3. Added Phase property to flow graph node that indicated the phase in which this node is created.
	2.4. Replaced RichTextBox with Fireball.CodeEditorControl to highlight syntax
	     to symlify finding errors in decompiled code

	3. ABC Generator:
	3.1. Implemented compilation of override methods for already compiled abstract or virtual methods
	     of interface or base classes.